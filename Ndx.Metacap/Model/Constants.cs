// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Constants.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Ndx.Model {

  /// <summary>Holder for reflection information generated from Constants.proto</summary>
  public static partial class ConstantsReflection {

    #region Descriptor
    /// <summary>File descriptor for Constants.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ConstantsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9Db25zdGFudHMucHJvdG8SCW5keC5tb2RlbCrqAgoMRGF0YUxpbmtUeXBl",
            "EggKBE51bGwQABIMCghFdGhlcm5ldBABEhsKF0V4cGVyaW1lbnRhbEV0aGVy",
            "bmV0M01CEAISFAoQQW1hdGV1clJhZGlvQVgyNRADEhoKFlByb3Rlb25Qcm9O",
            "ZXRUb2tlblJpbmcQBBIJCgVDaGFvcxAFEgsKB0llZWU4MDIQBhIKCgZBcmNO",
            "ZXQQBxIICgRTbGlwEAgSBwoDUHBwEAkSCAoERmRkaRAKEg4KCkF0bVJmYzE0",
            "ODMQCxIHCgNSYXcQDBILCgdTbGlwQlNEEA8SCgoGUHBwQlNEEBASCwoHQXRt",
            "Q2xpcBATEg0KCVBwcFNlcmlhbBAyEg0KCUNpc2NvSERMQxBoEg0KCUllZWU4",
            "MDIxMRBpEggKBExvb3AQbBIMCghMaW51eFNMTBBxEhMKD0llZWU4MDIxMV9S",
            "YWRpbxB/EhkKFFBlclBhY2tldEluZm9ybWF0aW9uEMABKuAHChJFdGhlcm5l",
            "dFBhY2tldFR5cGUSCAoETm9uZRAAEgkKBElwVjQQgBASCAoDQXJwEIYQEhAK",
            "ClJldmVyc2VBcnAQtYACEg4KCVdha2VPbkxhbhDCEBIPCglBcHBsZVRhbGsQ",
            "m4ECEhIKDEFwcGxlVGFsa0FycBDzgQISFQoPVkxhblRhZ2dlZEZyYW1lEICC",
            "AhImCiBOb3ZlbGxJbnRlcm5ldHdvcmtQYWNrZXRFeGNoYW5nZRC3ggISDAoG",
            "Tm92ZWxsELiCAhIKCgRJcFY2EN2NAhIQCgpNYWNDb250cm9sEIiQAhIOCghD",
            "b2JyYU5ldBCZkAISKAoiTXVsdGlwcm90b2NvbExhYmVsU3dpdGNoaW5nVW5p",
            "Y2FzdBDHkAISKgokTXVsdGlwcm90b2NvbExhYmVsU3dpdGNoaW5nTXVsdGlj",
            "YXN0EMiQAhI0Ci5Qb2ludFRvUG9pbnRQcm90b2NvbE92ZXJFdGhlcm5ldERp",
            "c2NvdmVyeVN0YWdlEOOQAhIyCixQb2ludFRvUG9pbnRQcm90b2NvbE92ZXJF",
            "dGhlcm5ldFNlc3Npb25TdGFnZRDkkAISLQonRXh0ZW5zaWJsZUF1dGhlbnRp",
            "Y2F0aW9uUHJvdG9jb2xPdmVyTGFuEI6RAhIPCglIeXBlclNjc2kQmpECEhUK",
            "D0F0YU92ZXJFdGhlcm5ldBCikQISFgoQRXRoZXJDYXRQcm90b2NvbBCkkQIS",
            "FgoQUHJvdmlkZXJCcmlkZ2luZxCokQISGgoUQXZiVHJhbnNwb3J0UHJvdG9j",
            "b2wQtZECEgoKBExMRFAQzJECEioKJFNlcmlhbFJlYWxUaW1lQ29tbXVuaWNh",
            "dGlvblN5c3RlbUlpaRDNkQISKgokQ2lyY3VpdEVtdWxhdGlvblNlcnZpY2Vz",
            "T3ZlckV0aGVybmV0ENiRAhIOCghIb21lUGx1ZxDhkQISEQoLTWFjU2VjdXJp",
            "dHkQ5ZECEhsKFVByZWNpc2lvblRpbWVQcm90b2NvbBD3kQISRQo/Q29ubmVj",
            "dGl2aXR5RmF1bHRNYW5hZ2VtZW50T3JPcGVyYXRpb25zQWRtaW5pc3RyYXRp",
            "b25NYW5hZ2VtZW50EIKSAhIeChhGaWJyZUNoYW5uZWxPdmVyRXRoZXJuZXQQ",
            "hpICEjQKLkZpYnJlQ2hhbm5lbE92ZXJFdGhlcm5ldEluaXRpYWxpemF0aW9u",
            "UHJvdG9jb2wQlJICEgoKBFFJblEQgKICEiAKGlZlcml0YXNMb3dMYXRlbmN5",
            "VHJhbnNwb3J0EP6VAxIMCghMb29wYmFjaxBgEgkKBEVjaG8QgAQqgwIKDklw",
            "UHJvdG9jb2xUeXBlEgsKB0hPUE9QVFMQABIICgRJQ01QEAESCAoESUdNUBAC",
            "EggKBElQSVAQBBIHCgNUQ1AQBhIHCgNFR1AQCBIHCgNQVVAQDBIHCgNVRFAQ",
            "ERIHCgNJRFAQFhIGCgJUUBAdEggKBElQdjYQKRILCgdST1VUSU5HECsSDAoI",
            "RlJBR01FTlQQLBIICgRSU1ZQEC4SBwoDR1JFEC8SBwoDRVNQEDISBgoCQUgQ",
            "MxIKCgZJQ01QVjYQOhIICgROT05FEDsSCwoHRFNUT1BUUxA8EgcKA01UUBBc",
            "EgkKBUVOQ0FQEGISBwoDUElNEGcSCAoEQ09NUBBsQg8KDW9yZy5uZHgubW9k",
            "ZWxiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Ndx.Model.DataLinkType), typeof(global::Ndx.Model.EthernetPacketType), typeof(global::Ndx.Model.IpProtocolType), }, null));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  //// &lt;summary>
  ////	This is a list of link-layer header types used in pcap and pcap-ng capture files. See
  //// See http://www.tcpdump.org/linktypes.html
  //// &lt;/summary>
  /// </summary>
  public enum DataLinkType {
    [pbr::OriginalName("Null")] Null = 0,
    [pbr::OriginalName("Ethernet")] Ethernet = 1,
    [pbr::OriginalName("ExperimentalEthernet3MB")] ExperimentalEthernet3Mb = 2,
    [pbr::OriginalName("AmateurRadioAX25")] AmateurRadioAx25 = 3,
    [pbr::OriginalName("ProteonProNetTokenRing")] ProteonProNetTokenRing = 4,
    [pbr::OriginalName("Chaos")] Chaos = 5,
    [pbr::OriginalName("Ieee802")] Ieee802 = 6,
    [pbr::OriginalName("ArcNet")] ArcNet = 7,
    [pbr::OriginalName("Slip")] Slip = 8,
    [pbr::OriginalName("Ppp")] Ppp = 9,
    [pbr::OriginalName("Fddi")] Fddi = 10,
    [pbr::OriginalName("AtmRfc1483")] AtmRfc1483 = 11,
    [pbr::OriginalName("Raw")] Raw = 12,
    [pbr::OriginalName("SlipBSD")] SlipBsd = 15,
    [pbr::OriginalName("PppBSD")] PppBsd = 16,
    [pbr::OriginalName("AtmClip")] AtmClip = 19,
    [pbr::OriginalName("PppSerial")] PppSerial = 50,
    [pbr::OriginalName("CiscoHDLC")] CiscoHdlc = 104,
    [pbr::OriginalName("Ieee80211")] Ieee80211 = 105,
    [pbr::OriginalName("Loop")] Loop = 108,
    [pbr::OriginalName("LinuxSLL")] LinuxSll = 113,
    [pbr::OriginalName("Ieee80211_Radio")] Ieee80211Radio = 127,
    [pbr::OriginalName("PerPacketInformation")] PerPacketInformation = 192,
  }

  public enum EthernetPacketType {
    /// <summary>
    //// &lt;summary>
    //// No Ethernet type
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("None")] None = 0,
    /// <summary>
    //// &lt;summary>
    //// Internet Protocol; Version 4 (IPv4)
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("IpV4")] IpV4 = 2048,
    /// <summary>
    //// &lt;summary>
    //// Address Resolution Protocol (ARP)
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("Arp")] Arp = 2054,
    /// <summary>
    //// &lt;summary>
    //// Reverse Address Resolution Protocol (RARP)
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("ReverseArp")] ReverseArp = 32821,
    /// <summary>
    //// &lt;summary>
    //// Wake-On-Lan (WOL)
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("WakeOnLan")] WakeOnLan = 2114,
    /// <summary>
    //// &lt;summary>
    //// AppleTalk (Ethertalk)
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("AppleTalk")] AppleTalk = 32923,
    /// <summary>
    //// &lt;summary>
    //// AppleTalk Address Resolution Protocol (AARP)
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("AppleTalkArp")] AppleTalkArp = 33011,
    /// <summary>
    //// &lt;summary>
    //// VLAN-tagged frame (IEEE 802.1Q)
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("VLanTaggedFrame")] VlanTaggedFrame = 33024,
    /// <summary>
    //// &lt;summary>
    //// Novell IPX (alt)
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("NovellInternetworkPacketExchange")] NovellInternetworkPacketExchange = 33079,
    /// <summary>
    //// &lt;summary>
    //// Novell
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("Novell")] Novell = 33080,
    /// <summary>
    //// &lt;summary>
    //// Internet Protocol; Version 6 (IPv6)
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("IpV6")] IpV6 = 34525,
    /// <summary>
    //// &lt;summary>
    //// MAC Control
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("MacControl")] MacControl = 34824,
    /// <summary>
    //// &lt;summary>
    //// CobraNet
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("CobraNet")] CobraNet = 34841,
    /// <summary>
    //// &lt;summary>
    //// MPLS unicast
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("MultiprotocolLabelSwitchingUnicast")] MultiprotocolLabelSwitchingUnicast = 34887,
    /// <summary>
    //// &lt;summary>
    //// MPLS multicast
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("MultiprotocolLabelSwitchingMulticast")] MultiprotocolLabelSwitchingMulticast = 34888,
    /// <summary>
    //// &lt;summary>
    //// PPPoE Discovery Stage
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("PointToPointProtocolOverEthernetDiscoveryStage")] PointToPointProtocolOverEthernetDiscoveryStage = 34915,
    /// <summary>
    //// &lt;summary>
    //// PPPoE Session Stage
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("PointToPointProtocolOverEthernetSessionStage")] PointToPointProtocolOverEthernetSessionStage = 34916,
    /// <summary>
    //// &lt;summary>
    //// EAP over LAN (IEEE 802.1X)
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("ExtensibleAuthenticationProtocolOverLan")] ExtensibleAuthenticationProtocolOverLan = 34958,
    /// <summary>
    //// &lt;summary>
    //// HyperSCSI (SCSI over Ethernet)
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("HyperScsi")] HyperScsi = 34970,
    /// <summary>
    //// &lt;summary>
    //// ATA over Ethernet
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("AtaOverEthernet")] AtaOverEthernet = 34978,
    /// <summary>
    //// &lt;summary>
    //// EtherCAT Protocol
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("EtherCatProtocol")] EtherCatProtocol = 34980,
    /// <summary>
    //// &lt;summary>
    //// Provider Bridging (IEEE 802.1ad)
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("ProviderBridging")] ProviderBridging = 34984,
    /// <summary>
    //// &lt;summary>
    //// AVB Transport Protocol (AVBTP)
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("AvbTransportProtocol")] AvbTransportProtocol = 34997,
    /// <summary>
    //// &lt;summary>
    //// Link Layer Discovery Protocol (LLDP)
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("LLDP")] Lldp = 35020,
    /// <summary>
    //// &lt;summary>
    //// SERCOS III
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("SerialRealTimeCommunicationSystemIii")] SerialRealTimeCommunicationSystemIii = 35021,
    /// <summary>
    //// &lt;summary>
    //// Circuit Emulation Services over Ethernet (MEF-8)
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("CircuitEmulationServicesOverEthernet")] CircuitEmulationServicesOverEthernet = 35032,
    /// <summary>
    //// &lt;summary>
    //// HomePlug
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("HomePlug")] HomePlug = 35041,
    /// <summary>
    //// &lt;summary>
    //// MAC security (IEEE 802.1AE)
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("MacSecurity")] MacSecurity = 35045,
    /// <summary>
    //// &lt;summary>
    //// Precision Time Protocol (IEEE 1588)
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("PrecisionTimeProtocol")] PrecisionTimeProtocol = 35063,
    /// <summary>
    //// &lt;summary>
    //// IEEE 802.1ag Connectivity Fault Management (CFM) Protocol / ITU-T Recommendation Y.1731 (OAM)
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("ConnectivityFaultManagementOrOperationsAdministrationManagement")] ConnectivityFaultManagementOrOperationsAdministrationManagement = 35074,
    /// <summary>
    //// &lt;summary>
    //// Fibre Channel over Ethernet
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("FibreChannelOverEthernet")] FibreChannelOverEthernet = 35078,
    /// <summary>
    //// &lt;summary>
    //// FCoE Initialization Protocol
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("FibreChannelOverEthernetInitializationProtocol")] FibreChannelOverEthernetInitializationProtocol = 35092,
    /// <summary>
    //// &lt;summary>
    //// Q-in-Q
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("QInQ")] QinQ = 37120,
    /// <summary>
    //// &lt;summary>
    //// Veritas Low Latency Transport (LLT)
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("VeritasLowLatencyTransport")] VeritasLowLatencyTransport = 51966,
    /// <summary>
    //// &lt;summary>
    //// Ethernet loopback packet
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("Loopback")] Loopback = 96,
    /// <summary>
    //// &lt;summary>
    //// Ethernet echo packet
    //// &lt;/summary>
    /// </summary>
    [pbr::OriginalName("Echo")] Echo = 512,
  }

  /// <summary>
  //// &lt;summary> Dummy protocol for TCP. &lt;/summary>
  /// </summary>
  public enum IpProtocolType {
    /// <summary>
    //// &lt;summary> IPv6 Hop-by-Hop options. &lt;/summary>
    /// </summary>
    [pbr::OriginalName("HOPOPTS")] Hopopts = 0,
    /// <summary>
    //// &lt;summary> Internet Control Message Protocol. &lt;/summary>
    /// </summary>
    [pbr::OriginalName("ICMP")] Icmp = 1,
    /// <summary>
    //// &lt;summary> Internet Group Management Protocol.&lt;/summary>
    /// </summary>
    [pbr::OriginalName("IGMP")] Igmp = 2,
    /// <summary>
    //// &lt;summary> IPIP tunnels (older KA9Q tunnels use 94). &lt;/summary>
    /// </summary>
    [pbr::OriginalName("IPIP")] Ipip = 4,
    /// <summary>
    //// &lt;summary> Transmission Control Protocol. &lt;/summary>
    /// </summary>
    [pbr::OriginalName("TCP")] Tcp = 6,
    /// <summary>
    //// &lt;summary> Exterior Gateway Protocol. &lt;/summary>
    /// </summary>
    [pbr::OriginalName("EGP")] Egp = 8,
    /// <summary>
    //// &lt;summary> PUP protocol. &lt;/summary>
    /// </summary>
    [pbr::OriginalName("PUP")] Pup = 12,
    /// <summary>
    //// &lt;summary> User Datagram Protocol. &lt;/summary>
    /// </summary>
    [pbr::OriginalName("UDP")] Udp = 17,
    /// <summary>
    //// &lt;summary> XNS IDP protocol. &lt;/summary>
    /// </summary>
    [pbr::OriginalName("IDP")] Idp = 22,
    /// <summary>
    //// &lt;summary> SO Transport Protocol Class 4. &lt;/summary>
    /// </summary>
    [pbr::OriginalName("TP")] Tp = 29,
    /// <summary>
    //// &lt;summary> IPv6 header. &lt;/summary>
    /// </summary>
    [pbr::OriginalName("IPv6")] Ipv6 = 41,
    /// <summary>
    //// &lt;summary> IPv6 routing header. &lt;/summary>
    /// </summary>
    [pbr::OriginalName("ROUTING")] Routing = 43,
    /// <summary>
    //// &lt;summary> IPv6 fragmentation header. &lt;/summary>
    /// </summary>
    [pbr::OriginalName("FRAGMENT")] Fragment = 44,
    /// <summary>
    //// &lt;summary> Reservation Protocol. &lt;/summary>
    /// </summary>
    [pbr::OriginalName("RSVP")] Rsvp = 46,
    /// <summary>
    //// &lt;summary> General Routing Encapsulation. &lt;/summary>
    /// </summary>
    [pbr::OriginalName("GRE")] Gre = 47,
    /// <summary>
    //// &lt;summary> Encapsulating security payload. &lt;/summary>
    /// </summary>
    [pbr::OriginalName("ESP")] Esp = 50,
    /// <summary>
    //// &lt;summary> Authentication header. &lt;/summary>
    /// </summary>
    [pbr::OriginalName("AH")] Ah = 51,
    /// <summary>
    //// &lt;summary> ICMPv6. &lt;/summary>
    /// </summary>
    [pbr::OriginalName("ICMPV6")] Icmpv6 = 58,
    /// <summary>
    //// &lt;summary> IPv6 no next header. &lt;/summary>
    /// </summary>
    [pbr::OriginalName("NONE")] None = 59,
    /// <summary>
    //// &lt;summary> IPv6 destination options. &lt;/summary>
    /// </summary>
    [pbr::OriginalName("DSTOPTS")] Dstopts = 60,
    /// <summary>
    //// &lt;summary> Multicast Transport Protocol. &lt;/summary>
    /// </summary>
    [pbr::OriginalName("MTP")] Mtp = 92,
    /// <summary>
    //// &lt;summary> Encapsulation Header. &lt;/summary>
    /// </summary>
    [pbr::OriginalName("ENCAP")] Encap = 98,
    /// <summary>
    //// &lt;summary> Protocol Independent Multicast. &lt;/summary>
    /// </summary>
    [pbr::OriginalName("PIM")] Pim = 103,
    /// <summary>
    //// &lt;summary> Compression Header Protocol. &lt;/summary>
    /// </summary>
    [pbr::OriginalName("COMP")] Comp = 108,
  }

  #endregion

}

#endregion Designer generated code
