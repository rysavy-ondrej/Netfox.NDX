//  
// Copyright (c) BRNO UNIVERSITY OF TECHNOLOGY. All rights reserved.  
// Licensed under the MIT License. See LICENSE file in the solution root for full license information.  
//
syntax = "proto3";
package ndx.decoders;
option java_package = "org.ndx.decoders";
// BASE:
import "packet-eth.proto";
import "packet-frame.proto";
import "packet-ieee80211.proto";
import "packet-ip.proto";
import "packet-ipv6.proto";
import "packet-llc.proto";
import "packet-tcp.proto";
import "packet-udp.proto";
// CORE:
import "packet-arp.proto";
import "packet-atm.proto";
import "packet-dns.proto";
import "packet-http.proto";
import "packet-http2.proto";
import "packet-icmp.proto";
import "packet-icmpv6.proto";
import "packet-igmp.proto";
import "packet-ipsec.proto";
import "packet-ipx.proto";
import "packet-nbipx.proto";
import "packet-nbt.proto";
import "packet-netbios.proto";
import "packet-ppp.proto";


message Packet {
	int64 TimeStamp = 1;
	int32 FrameNumber = 2;

	message Protocol {
		oneof ProtocolType {
			// BASE:
			Ndx.Decoders.Basic.Eth Eth = 1;
			Ndx.Decoders.Basic.Ieee80211 Ieee80211 = 2;
			Ndx.Decoders.Basic.Ip Ip = 3;
			Ndx.Decoders.Basic.Ipv6 Ipv6 = 4;
			Ndx.Decoders.Basic.Tcp Tcp = 5;
			Ndx.Decoders.Basic.Udp Udp = 6;
			// CORE:
			Ndx.Decoders.Core.Arp Arp = 101;
			Ndx.Decoders.Core.Atm Atm = 102;
			Ndx.Decoders.Core.Dns Dns = 103;
			Ndx.Decoders.Core.Http Http = 104;
			Ndx.Decoders.Core.Http2 Http2 = 105;
			Ndx.Decoders.Core.Icmp Icmp = 106;
			Ndx.Decoders.Core.Icmpv6 Icmpv6 = 107;
			Ndx.Decoders.Core.Igmp Igmp = 108;
			Ndx.Decoders.Core.Ipsec Ipsec = 109;
			Ndx.Decoders.Core.Ipx Ipx = 110;
			Ndx.Decoders.Core.Nbipx Nbipx = 111;
			Ndx.Decoders.Core.Nbt Nbt = 112;
			Ndx.Decoders.Core.Netbios Netbios = 113;
			Ndx.Decoders.Core.Ppp Ppp = 114;
			// COMMON:
		}
	}
	repeated Protocol Protocols = 10;
}