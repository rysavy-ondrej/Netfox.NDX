//  
// Copyright (c) BRNO UNIVERSITY OF TECHNOLOGY. All rights reserved.  
// Licensed under the MIT License. See LICENSE file in the solution root for full license information.  
//
syntax = "proto3";
package ndx.model;

enum SshMessageType { SshProtocol = 0;  SshKeyExchange = 1; SshEncryptedPacket = 2; }
enum SshRole { SshClient = 0; SshServer = 1; } 
enum SshMessageCode 
{
    SSH_MSG_NONE = 0;
    SSH_MSG_DISCONNECT = 1;
    SSH_MSG_IGNORE = 2;
    SSH_MSG_UNIMPLEMENTE = 3;
    SSH_MSG_DEBUG = 4;
    SSH_MSG_SERVICE_REQUEST = 5;
    SSH_MSG_SERVICE_ACCEPT = 6;
    SSH_MSG_KEXINIT	= 20;
    SSH_MSG_NEWKEYS	= 21;
    SSH_MSG_DFH_KEXINIT = 30;
    SSH_MSG_DFH_KEXREPLY = 31;
    SSH_MSG_USERAUTH_REQUEST = 50;
    SSH_MSG_USERAUTH_FAILURE = 51;
    SSH_MSG_USERAUTH_SUCCESS = 52;
    SSH_MSG_USERAUTH_BANNER	= 53;
    SSH_MSG_USERAUTH_INFO_REQUEST = 60;
    SSH_MSG_USERAUTH_INFO_RESPONSE = 61;
    SSH_MSG_GLOBAL_REQUEST = 80;
    SSH_MSG_REQUEST_SUCCESS = 81;
    SSH_MSG_REQUEST_FAILURE = 82;
}

message SshEvent 
{
    int64 TimeOffset = 1;
    SshMessageType Type = 2;
    SshMessageCode Code = 3;
    SshRole Sender = 4;
    int32 PacketLength = 5;
}

message SshConversation
{
    string Encryption = 10;
    string HMAC = 11;
    string Compression = 12;   
    repeated SshEvent Events = 20;
}