syntax = "proto3";
package Ndx.Decoders.Core;
message Dns {
    message _DnsFlags {
        // Response ('dns_flags_dns_flags_response')
         bool DnsFlagsResponse = 1;

        // Opcode ('dns_flags_dns_flags_opcode')
         uint32 DnsFlagsOpcode = 2;

        // Authoritative ('dns_flags_dns_flags_authoritative')
         bool DnsFlagsAuthoritative = 3;

        // Conflict ('dns_flags_dns_flags_conflict')
         bool DnsFlagsConflict = 4;

        // Truncated ('dns_flags_dns_flags_truncated')
         bool DnsFlagsTruncated = 5;

        // Recursion desired ('dns_flags_dns_flags_recdesired')
         bool DnsFlagsRecdesired = 6;

        // Tentative ('dns_flags_dns_flags_tentative')
         bool DnsFlagsTentative = 7;

        // Recursion available ('dns_flags_dns_flags_recavail')
         bool DnsFlagsRecavail = 8;

        // Z ('dns_flags_dns_flags_z')
         bool DnsFlagsZ = 9;

        // Answer authenticated ('dns_flags_dns_flags_authenticated')
         bool DnsFlagsAuthenticated = 10;

        // Non-authenticated data ('dns_flags_dns_flags_checkdisable')
         bool DnsFlagsCheckdisable = 11;

        // Reply code ('dns_flags_dns_flags_rcode')
         uint32 DnsFlagsRcode = 12;

    }
    // Flags ('dns_dns_flags')
     _DnsFlags DnsFlags = 1;

    // Transaction ID ('dns_dns_id')
     uint32 DnsId = 2;

    // Response In ('dns_dns_response_in')
     int64 DnsResponseIn = 3;

    // Request In ('dns_dns_response_to')
     int64 DnsResponseTo = 4;

    // Time ('dns_dns_time')
     int64 DnsTime = 5;

    // Additional RRs ('dns_dns_count_add_rr')
     uint32 DnsCountAddRr = 6;

    message _DnsQry {
        // Type ('text_dns_qry_type')
         uint32 DnsQryType = 1;

        // Class ('text_dns_qry_class')
         uint32 DnsQryClass = 2;

        // Name ('text_dns_qry_name')
         string DnsQryName = 3;

        // Name Length ('text_dns_qry_name_len')
         uint32 DnsQryNameLen = 4;

        // Label Count ('dns_dns_count_labels')
         int32 DnsCountLabels = 5;

    }
    // Grouping information related to DNS QRY ('')
    repeated _DnsQry DnsQry = 7;

    message _DnsResp {
        // Type ('text_dns_resp_type')
         uint32 DnsRespType = 1;

        // Class ('text_dns_resp_class')
         uint32 DnsRespClass = 2;

        // Cache flush ('dns_dns_resp_cache_flush')
         bool DnsRespCacheFlush = 3;

        // Higher bits in extended RCODE ('dns_dns_resp_ext_rcode')
         uint32 DnsRespExtRcode = 4;

        // EDNS0 version ('dns_dns_resp_edns0_version')
         uint32 DnsRespEdns0Version = 5;

        // Z ('dns_dns_resp_z')
         uint32 DnsRespZ = 6;

        // DO bit ('dns_resp_z_dns_resp_z_do')
         bool DnsRespZDo = 7;

        // Reserved ('dns_resp_z_dns_resp_z_reserved')
         uint32 DnsRespZReserved = 8;

        // Name ('text_dns_resp_name')
         string DnsRespName = 9;

        // Time to live ('text_dns_resp_ttl')
         int32 DnsRespTtl = 10;

        // Data length ('text_dns_resp_len')
         uint32 DnsRespLen = 11;

        // Value of the response ('')
         string DnsRespValue = 12;

    }
    // Grouping information related to DNS reponse ('')
    repeated _DnsResp DnsResp = 8;

    // Service ('text_dns_srv_service')
     string DnsSrvService = 9;

    // Protocol ('text_dns_srv_proto')
     string DnsSrvProto = 10;

    // Name ('text_dns_srv_name')
     string DnsSrvName = 11;

    // Priority ('text_dns_srv_priority')
     uint32 DnsSrvPriority = 12;

    // Weight ('text_dns_srv_weight')
     uint32 DnsSrvWeight = 13;

    // Port ('text_dns_srv_port')
     uint32 DnsSrvPort = 14;

    // Target ('text_dns_srv_target')
     string DnsSrvTarget = 15;

    // Order ('text_dns_naptr_order')
     uint32 DnsNaptrOrder = 16;

    // Preference ('text_dns_naptr_preference')
     uint32 DnsNaptrPreference = 17;

    // Flags Length ('text_dns_naptr_flags_length')
     uint32 DnsNaptrFlagsLength = 18;

    // Flags ('text_dns_naptr_flags')
     string DnsNaptrFlags = 19;

    // Service Length ('text_dns_naptr_service_length')
     uint32 DnsNaptrServiceLength = 20;

    // Service ('text_dns_naptr_service')
     string DnsNaptrService = 21;

    // Regex Length ('text_dns_naptr_regex_length')
     uint32 DnsNaptrRegexLength = 22;

    // Regex ('text_dns_naptr_regex')
     string DnsNaptrRegex = 23;

    // Replacement Length ('text_dns_naptr_replacement_length')
     uint32 DnsNaptrReplacementLength = 24;

    // Replacement ('dns_dns_naptr_replacement')
     string DnsNaptrReplacement = 25;

    // Address ('text_dns_a')
     bytes DnsA = 26;

    // Mail Destination ('text_dns_md')
     string DnsMd = 27;

    // Mail Forwarder ('text_dns_mf')
     string DnsMf = 28;

    // MailBox Domaine ('text_dns_mb')
     string DnsMb = 29;

    // Mail Group member ('text_dns_mg')
     string DnsMg = 30;

    // Mail Rename domaine ('text_dns_mr')
     string DnsMr = 31;

    // Null (data) ('dns_dns_null')
     bytes DnsNull = 32;

    // AAAA Address ('text_dns_aaaa')
     bytes DnsAaaa = 33;

    // CNAME ('text_dns_cname')
     string DnsCname = 34;

    // UDP payload size ('text_dns_rr_udp_payload_size')
     uint32 DnsRrUdpPayloadSize = 35;

    // Primary name server ('dns_dns_soa_mname')
     string DnsSoaMname = 36;

    // Responsible authority's mailbox ('text_dns_soa_rname')
     string DnsSoaRname = 37;

    // Serial Number ('text_dns_soa_serial_number')
     uint32 DnsSoaSerialNumber = 38;

    // Refresh Interval ('text_dns_soa_refresh_interval')
     uint32 DnsSoaRefreshInterval = 39;

    // Retry Interval ('text_dns_soa_retry_interval')
     uint32 DnsSoaRetryInterval = 40;

    // Expire limit ('text_dns_soa_expire_limit')
     uint32 DnsSoaExpireLimit = 41;

    // Minimum TTL ('text_dns_soa_mininum_ttl')
     uint32 DnsSoaMininumTtl = 42;

    // Domain Name ('text_dns_ptr_domain_name')
     string DnsPtrDomainName = 43;

    // Address ('dns_dns_wks_address')
     bytes DnsWksAddress = 44;

    // Protocol ('dns_dns_wks_protocol')
     uint32 DnsWksProtocol = 45;

    // Bits ('dns_dns_wks_bits')
     uint32 DnsWksBits = 46;

    // CPU Length ('dns_dns_hinfo_cpu_length')
     uint32 DnsHinfoCpuLength = 47;

    // CPU ('dns_dns_hinfo_cpu')
     string DnsHinfoCpu = 48;

    // OS Length ('dns_dns_hinfo_os_length')
     uint32 DnsHinfoOsLength = 49;

    // OS ('dns_dns_hinfo_os')
     string DnsHinfoOs = 50;

    // Responsible Mailbox ('dns_dns_minfo_r')
     string DnsMinfoR = 51;

    // Error Mailbox ('dns_dns_minfo_e')
     string DnsMinfoE = 52;

    // Preference ('text_dns_mx_preference')
     uint32 DnsMxPreference = 53;

    // Mail Exchange ('text_dns_mx_mail_exchange')
     string DnsMxMailExchange = 54;

    // TXT Length ('dns_txt_dns_txt_length')
     uint32 DnsTxtLength = 55;

    // TXT ('dns_dns_txt')
     string DnsTxt = 56;

    // OpenPGP Key ('dns_dns_openpgpkey')
     string DnsOpenpgpkey = 57;

    // SOA ('dns_dns_csync_soa')
     uint32 DnsCsyncSoa = 58;

    // Flags ('dns_dns_csync_flags')
     uint32 DnsCsyncFlags = 59;

    // immediate ('dns_csync_flags_dns_csync_flags_immediate')
     bool DnsCsyncFlagsImmediate = 60;

    // soaminimum ('dns_csync_flags_dns_csync_flags_soaminimum')
     bool DnsCsyncFlagsSoaminimum = 61;

    // Type Bitmap ('dns_dns_csync_type_bitmap')
     bytes DnsCsyncTypeBitmap = 62;

    // SPF Length ('dns_spf_dns_spf_length')
     uint32 DnsSpfLength = 63;

    // SPF ('dns_dns_spf')
     string DnsSpf = 64;

    // Preference ('dns_ilnp_nid_dns_ilnp_nid_preference')
     uint32 DnsIlnpNidPreference = 65;

    // NodeID ('dns_dns_ilnp_nid')
     bytes DnsIlnpNid = 66;

    // Preference ('dns_ilnp_l32_dns_ilnp_l32_preference')
     uint32 DnsIlnpL32Preference = 67;

    // Locator32 ('dns_dns_ilnp_l32')
     bytes DnsIlnpL32 = 68;

    // Preference ('dns_ilnp_l64_dns_ilnp_l64_preference')
     uint32 DnsIlnpL64Preference = 69;

    // Locator64 ('dns_dns_ilnp_l64')
     bytes DnsIlnpL64 = 70;

    // Preference ('dns_ilnp_lp_dns_ilnp_lp_preference')
     uint32 DnsIlnpLpPreference = 71;

    // Locator FQDN ('dns_dns_ilnp_lp')
     string DnsIlnpLp = 72;

    // EUI48 Address ('dns_dns_eui48')
     bytes DnsEui48 = 73;

    // EUI64 Address ('dns_dns_eui64')
     bytes DnsEui64 = 74;

    // Type Covered ('dns_dns_rrsig_type_covered')
     uint32 DnsRrsigTypeCovered = 75;

    // Algorithm ('dns_dns_rrsig_algorithm')
     uint32 DnsRrsigAlgorithm = 76;

    // Labels ('dns_dns_rrsig_labels')
     uint32 DnsRrsigLabels = 77;

    // Original TTL ('dns_dns_rrsig_original_ttl')
     uint32 DnsRrsigOriginalTtl = 78;

    // Signature Expiration ('dns_dns_rrsig_signature_expiration')
     int64 DnsRrsigSignatureExpiration = 79;

    // Signature Inception ('dns_dns_rrsig_signature_inception')
     int64 DnsRrsigSignatureInception = 80;

    // Key Tag ('dns_dns_rrsig_key_tag')
     uint32 DnsRrsigKeyTag = 81;

    // Signer's name ('dns_dns_rrsig_signers_name')
     string DnsRrsigSignersName = 82;

    // Signature ('dns_dns_rrsig_signature')
     bytes DnsRrsigSignature = 83;

    // Flags ('dns_dns_dnskey_flags')
     uint32 DnsDnskeyFlags = 84;

    // Zone Key ('dns_dnskey_flags_dns_dnskey_flags_zone_key')
     bool DnsDnskeyFlagsZoneKey = 85;

    // Key Revoked ('dns_dnskey_flags_dns_dnskey_flags_key_revoked')
     bool DnsDnskeyFlagsKeyRevoked = 86;

    // Key Signing Key ('dns_dnskey_flags_dns_dnskey_flags_secure_entry_point')
     bool DnsDnskeyFlagsSecureEntryPoint = 87;

    // Key Signing Key ('dns_dnskey_flags_dns_dnskey_flags_reserved')
     uint32 DnsDnskeyFlagsReserved = 88;

    // Protocol ('dns_dns_dnskey_protocol')
     uint32 DnsDnskeyProtocol = 89;

    // Algorithm ('dns_dns_dnskey_algorithm')
     uint32 DnsDnskeyAlgorithm = 90;

    // Key id ('dns_dns_dnskey_key_id')
     uint32 DnsDnskeyKeyId = 91;

    // Public Key ('dns_dns_dnskey_public_key')
     bytes DnsDnskeyPublicKey = 92;

    // Flags ('dns_dns_key_flags')
     uint32 DnsKeyFlags = 93;

    // Key allowed for authentication ('dns_key_flags_dns_key_flags_authentication')
     bool DnsKeyFlagsAuthentication = 94;

    // Key allowed for confidentiality ('dns_key_flags_dns_key_flags_confidentiality')
     bool DnsKeyFlagsConfidentiality = 95;

    // Key required ('dns_key_flags_dns_key_flags_required')
     bool DnsKeyFlagsRequired = 96;

    // Key is associated with a user ('dns_key_flags_dns_key_flags_associated_user')
     bool DnsKeyFlagsAssociatedUser = 97;

    // Key is associated with the named entity ('dns_key_flags_dns_key_flags_associated_named_entity')
     bool DnsKeyFlagsAssociatedNamedEntity = 98;

    // Key use with IPSEC ('dns_key_flags_dns_key_flags_ipsec')
     bool DnsKeyFlagsIpsec = 99;

    // Key use with MIME security multiparts ('dns_key_flags_dns_key_flags_mime')
     bool DnsKeyFlagsMime = 100;

    // Signatory ('dns_key_flags_dns_key_flags_signatory')
     uint32 DnsKeyFlagsSignatory = 101;

    // Protocol ('dns_dns_key_protocol')
     uint32 DnsKeyProtocol = 102;

    // Algorithm ('dns_dns_key_algorithm')
     uint32 DnsKeyAlgorithm = 103;

    // Key ID ('dns_dns_key_key_id')
     uint32 DnsKeyKeyId = 104;

    // Public Key ('dns_dns_key_public_key')
     bytes DnsKeyPublicKey = 105;

    // Preference ('dns_dns_px_preference')
     uint32 DnsPxPreference = 106;

    // MAP822 ('dns_dns_px_map822')
     string DnsPxMap822 = 107;

    // MAPX400 ('dns_dns_px_map400')
     string DnsPxMap400 = 108;

    // Algorithm name ('dns_dns_tkey_algo_name')
     string DnsTkeyAlgoName = 109;

    // Signature Expiration ('dns_dns_tkey_signature_expiration')
     int64 DnsTkeySignatureExpiration = 110;

    // Signature Inception ('dns_dns_tkey_signature_inception')
     int64 DnsTkeySignatureInception = 111;

    // Mode ('dns_dns_tkey_mode')
     uint32 DnsTkeyMode = 112;

    // Error ('dns_dns_tkey_error')
     uint32 DnsTkeyError = 113;

    // Key Size ('dns_dns_tkey_key_size')
     uint32 DnsTkeyKeySize = 114;

    // Key Data ('dns_dns_tkey_key_data')
     bytes DnsTkeyKeyData = 115;

    // Other Size ('dns_dns_tkey_other_size')
     uint32 DnsTkeyOtherSize = 116;

    // Other Data ('dns_dns_tkey_other_data')
     bytes DnsTkeyOtherData = 117;

    // Gateway Precedence ('dns_dns_ipseckey_gateway_precedence')
     uint32 DnsIpseckeyGatewayPrecedence = 118;

    // Gateway Algorithm ('dns_dns_ipseckey_gateway_algorithm')
     uint32 DnsIpseckeyGatewayAlgorithm = 119;

    // Gateway Type ('dns_dns_ipseckey_gateway_type')
     uint32 DnsIpseckeyGatewayType = 120;

    // IPv4 Gateway ('dns_dns_ipseckey_gateway_ipv4')
     bytes DnsIpseckeyGatewayIpv4 = 121;

    // IPv6 Gateway ('dns_dns_ipseckey_gateway_ipv6')
     bytes DnsIpseckeyGatewayIpv6 = 122;

    // DNS Gateway ('dns_dns_ipseckey_gateway_dns')
     string DnsIpseckeyGatewayDns = 123;

    // Public Key ('dns_dns_ipseckey_public_key')
     bytes DnsIpseckeyPublicKey = 124;

    // IP Version ('dns_dns_xpf_ip_version')
     uint32 DnsXpfIpVersion = 125;

    // Protocol ('dns_dns_xpf_protocol')
     uint32 DnsXpfProtocol = 126;

    // IPv4 Source ('dns_dns_xpf_source_ipv4')
     bytes DnsXpfSourceIpv4 = 127;

    // IPv4 Destination ('dns_dns_xpf_destination_ipv4')
     bytes DnsXpfDestinationIpv4 = 128;

    // IPv6 Source ('dns_dns_xpf_source_ipv6')
     bytes DnsXpfSourceIpv6 = 129;

    // IPv6 Destination ('dns_dns_xpf_destination_ipv6')
     bytes DnsXpfDestinationIpv6 = 130;

    // Source port ('dns_dns_xpf_sport')
     uint32 DnsXpfSport = 131;

    // Destination port ('dns_dns_xpf_dport')
     uint32 DnsXpfDport = 132;

    // Prefix len ('dns_dns_a6_prefix_len')
     uint32 DnsA6PrefixLen = 133;

    // Address Suffix ('dns_dns_a6_address_suffix')
     bytes DnsA6AddressSuffix = 134;

    // Prefix name ('dns_dns_a6_prefix_name')
     string DnsA6PrefixName = 135;

    // Dname ('dns_dns_dname')
     string DnsDname = 136;

    // Version ('dns_dns_loc_version')
     uint32 DnsLocVersion = 137;

    // Size ('dns_dns_loc_size')
     uint32 DnsLocSize = 138;

    // Horizontal Precision ('dns_dns_loc_horizontal_precision')
     uint32 DnsLocHorizontalPrecision = 139;

    // Vertical Precision ('dns_dns_loc_vertical_precision')
     uint32 DnsLocVerticalPrecision = 140;

    // Latitude ('dns_dns_loc_latitude')
     uint32 DnsLocLatitude = 141;

    // Longitude ('dns_dns_loc_longitude')
     uint32 DnsLocLongitude = 142;

    // Altitude ('dns_dns_loc_altitude')
     uint32 DnsLocAltitude = 143;

    // Unknown data ('dns_dns_loc_unknown_data')
     bytes DnsLocUnknownData = 144;

    // Next Domain Name ('dns_dns_nxt_next_domain_name')
     string DnsNxtNextDomainName = 145;

    // Preference ('dns_dns_kx_preference')
     uint32 DnsKxPreference = 146;

    // Key Exchange ('dns_dns_kx_key_exchange')
     string DnsKxKeyExchange = 147;

    // Type ('dns_dns_cert_type')
     uint32 DnsCertType = 148;

    // Key Tag ('dns_dns_cert_key_tag')
     uint32 DnsCertKeyTag = 149;

    // Algorithm ('dns_dns_cert_algorithm')
     uint32 DnsCertAlgorithm = 150;

    // Certificate (or CRL) ('dns_dns_cert_certificate')
     bytes DnsCertCertificate = 151;

    // Next Domain Name ('dns_dns_nsec_next_domain_name')
     string DnsNsecNextDomainName = 152;

    // Name Server ('text_dns_ns')
     string DnsNs = 153;

    // Option ('dns_dns_opt')
     int32 DnsOpt = 154;

    // Option Code ('dns_opt_dns_opt_code')
     uint32 DnsOptCode = 155;

    // Option Length ('dns_opt_dns_opt_len')
     uint32 DnsOptLen = 156;

    // Option Data ('dns_opt_dns_opt_data')
     bytes DnsOptData = 157;

    // DAU ('dns_opt_dns_opt_dau')
     uint32 DnsOptDau = 158;

    // DHU ('dns_opt_dns_opt_dhu')
     uint32 DnsOptDhu = 159;

    // N3U ('dns_opt_dns_opt_n3u')
     uint32 DnsOptN3u = 160;

    // Family ('dns_dns_opt_client_family')
     uint32 DnsOptClientFamily = 161;

    // Source Netmask ('dns_dns_opt_client_netmask')
     uint32 DnsOptClientNetmask = 162;

    // Scope Netmask ('dns_dns_opt_client_scope')
     uint32 DnsOptClientScope = 163;

    // Client Subnet ('dns_dns_opt_client_addr')
     bytes DnsOptClientAddr = 164;

    // Client Subnet ('dns_dns_opt_client_addr4')
     bytes DnsOptClientAddr4 = 165;

    // Client Subnet ('dns_dns_opt_client_addr6')
     bytes DnsOptClientAddr6 = 166;

    // Client Cookie ('dns_dns_opt_cookie_client')
     bytes DnsOptCookieClient = 167;

    // Server Cookie ('dns_dns_opt_cookie_server')
     bytes DnsOptCookieServer = 168;

    // Timeout ('dns_dns_opt_edns_tcp_keepalive_timeout')
     uint32 DnsOptEdnsTcpKeepaliveTimeout = 169;

    // Padding ('dns_opt_dns_opt_padding')
     bytes DnsOptPadding = 170;

    // Closest Trust Point ('dns_dns_opt_chain_fqdn')
     string DnsOptChainFqdn = 171;

    // Questions ('dns_dns_count_queries')
     uint32 DnsCountQueries = 172;

    // Zones ('dns_dns_count_zones')
     uint32 DnsCountZones = 173;

    // Answer RRs ('dns_dns_count_answers')
     uint32 DnsCountAnswers = 174;

    // Prerequisites ('dns_dns_count_prerequisites')
     uint32 DnsCountPrerequisites = 175;

    // Authority RRs ('dns_dns_count_auth_rr')
     uint32 DnsCountAuthRr = 176;

    // Updates ('dns_dns_count_updates')
     uint32 DnsCountUpdates = 177;

    // Hash algorithm ('dns_dns_nsec3_algo')
     uint32 DnsNsec3Algo = 178;

    // NSEC3 flags ('dns_dns_nsec3_flags')
     uint32 DnsNsec3Flags = 179;

    // NSEC3 Opt-out flag ('dns_nsec3_flags_dns_nsec3_flags_opt_out')
     bool DnsNsec3FlagsOptOut = 180;

    // NSEC3 iterations ('dns_dns_nsec3_iterations')
     uint32 DnsNsec3Iterations = 181;

    // Salt length ('dns_dns_nsec3_salt_length')
     uint32 DnsNsec3SaltLength = 182;

    // Salt value ('dns_dns_nsec3_salt_value')
     bytes DnsNsec3SaltValue = 183;

    // Hash length ('dns_dns_nsec3_hash_length')
     uint32 DnsNsec3HashLength = 184;

    // Next hashed owner ('dns_dns_nsec3_hash_value')
     bytes DnsNsec3HashValue = 185;

    // Certificate Usage ('dns_dns_tlsa_certificate_usage')
     uint32 DnsTlsaCertificateUsage = 186;

    // Selector ('dns_dns_tlsa_selector')
     uint32 DnsTlsaSelector = 187;

    // Matching Type ('dns_dns_tlsa_matching_type')
     uint32 DnsTlsaMatchingType = 188;

    // Certificate Association Data ('dns_dns_tlsa_certificate_association_data')
     bytes DnsTlsaCertificateAssociationData = 189;

    // Algorithm Name ('dns_dns_tsig_algorithm_name')
     string DnsTsigAlgorithmName = 190;

    // Time Signed ('dns_dns_tsig_time_signed')
     int64 DnsTsigTimeSigned = 191;

    // Original Id ('dns_dns_tsig_original_id')
     uint32 DnsTsigOriginalId = 192;

    // Error ('dns_dns_tsig_error')
     uint32 DnsTsigError = 193;

    // Fudge ('dns_dns_tsig_fudge')
     uint32 DnsTsigFudge = 194;

    // MAC Size ('dns_dns_tsig_mac_size')
     uint32 DnsTsigMacSize = 195;

    // Other Len ('dns_dns_tsig_other_len')
     uint32 DnsTsigOtherLen = 196;

    // MAC ('dns_dns_tsig_mac')
     int32 DnsTsigMac = 197;

    // Other Data ('dns_dns_tsig_other_data')
     bytes DnsTsigOtherData = 198;

    // Algorithm ('dns_dns_sshfp_algorithm')
     uint32 DnsSshfpAlgorithm = 199;

    // Fingerprint type ('dns_sshfp_fingerprint_dns_sshfp_fingerprint_type')
     uint32 DnsSshfpFingerprintType = 200;

    // Fingerprint ('dns_dns_sshfp_fingerprint')
     bytes DnsSshfpFingerprint = 201;

    // HIT length ('dns_hip_hit_dns_hip_hit_length')
     uint32 DnsHipHitLength = 202;

    // HIT length ('dns_dns_hip_hit_pk_algo')
     uint32 DnsHipHitPkAlgo = 203;

    // PK length ('dns_hip_pk_dns_hip_pk_length')
     uint32 DnsHipPkLength = 204;

    // Host Identity Tag ('dns_dns_hip_hit')
     bytes DnsHipHit = 205;

    // HIP Public Key ('dns_dns_hip_pk')
     bytes DnsHipPk = 206;

    // Rendezvous Server ('dns_dns_hip_rendezvous_server')
     string DnsHipRendezvousServer = 207;

    // DHCID Data ('dns_dns_dhcid_rdata')
     bytes DnsDhcidRdata = 208;

    // Key id ('dns_dns_ds_key_id')
     uint32 DnsDsKeyId = 209;

    // Algorithm ('dns_dns_ds_algorithm')
     uint32 DnsDsAlgorithm = 210;

    // Digest Type ('dns_dns_ds_digest_type')
     uint32 DnsDsDigestType = 211;

    // Digest ('dns_dns_ds_digest')
     bytes DnsDsDigest = 212;

    // Address Family ('dns_dns_apl_address_family')
     uint32 DnsAplAddressFamily = 213;

    // Prefix Length ('dns_dns_apl_coded_prefix')
     uint32 DnsAplCodedPrefix = 214;

    // Negation Flag ('dns_dns_apl_negation')
     bool DnsAplNegation = 215;

    // Address Length ('dns_dns_apl_afdlength')
     uint32 DnsAplAfdlength = 216;

    // Address ('dns_dns_apl_afdpart_ipv4')
     bytes DnsAplAfdpartIpv4 = 217;

    // Address ('dns_dns_apl_afdpart_ipv6')
     bytes DnsAplAfdpartIpv6 = 218;

    // Address ('dns_dns_apl_afdpart_data')
     bytes DnsAplAfdpartData = 219;

    // Longitude length ('dns_dns_gpos_longitude_length')
     uint32 DnsGposLongitudeLength = 220;

    // Longitude ('dns_dns_gpos_longitude')
     string DnsGposLongitude = 221;

    // Latitude length ('dns_dns_gpos_latitude_length')
     uint32 DnsGposLatitudeLength = 222;

    // Latitude ('dns_dns_gpos_latitude')
     string DnsGposLatitude = 223;

    // Altitude length ('dns_dns_gpos_altitude_length')
     uint32 DnsGposAltitudeLength = 224;

    // Altitude ('dns_dns_gpos_altitude')
     string DnsGposAltitude = 225;

    // Mailbox ('dns_dns_rp_mailbox')
     string DnsRpMailbox = 226;

    // TXT RR ('dns_dns_rp_txt_rr')
     string DnsRpTxtRr = 227;

    // Subtype ('dns_dns_afsdb_subtype')
     uint32 DnsAfsdbSubtype = 228;

    // Hostname ('dns_dns_afsdb_hostname')
     string DnsAfsdbHostname = 229;

    // Length ('dns_dns_x25_length')
     uint32 DnsX25Length = 230;

    // PSDN-Address ('dns_dns_x25_psdn_address')
     string DnsX25PsdnAddress = 231;

    // Length ('dns_dns_idsn_length')
     uint32 DnsIdsnLength = 232;

    // ISDN Address ('dns_dns_idsn_address')
     string DnsIdsnAddress = 233;

    // Length ('dns_dns_idsn_sa_length')
     uint32 DnsIdsnSaLength = 234;

    // Sub Address ('dns_dns_idsn_sa_address')
     string DnsIdsnSaAddress = 235;

    // Preference ('dns_dns_rt_subtype')
     uint32 DnsRtSubtype = 236;

    // Intermediate Hostname ('dns_dns_rt_intermediate_host')
     string DnsRtIntermediateHost = 237;

    // NSAP Data ('dns_dns_nsap_rdata')
     bytes DnsNsapRdata = 238;

    // Owner ('dns_dns_nsap_ptr_owner')
     string DnsNsapPtrOwner = 239;

    // CAA Flags ('dns_dns_caa_flags')
     uint32 DnsCaaFlags = 240;

    // Issuer Critical ('dns_caa_flags_dns_caa_flags_issuer_critical')
     bool DnsCaaFlagsIssuerCritical = 241;

    // Issue ('dns_dns_caa_issue')
     string DnsCaaIssue = 242;

    // Issue Wildcard ('dns_dns_caa_issuewild')
     string DnsCaaIssuewild = 243;

    // Report URL ('dns_dns_caa_iodef')
     string DnsCaaIodef = 244;

    // Unknown tag ('dns_dns_caa_unknown')
     string DnsCaaUnknown = 245;

    // Tag length ('dns_dns_caa_tag_length')
     uint32 DnsCaaTagLength = 246;

    // Tag ('dns_dns_caa_tag')
     string DnsCaaTag = 247;

    // Value ('dns_dns_caa_value')
     string DnsCaaValue = 248;

    // Local Flag ('dns_dns_wins_local_flag')
     bool DnsWinsLocalFlag = 249;

    // Lookup timeout ('dns_dns_wins_lookup_timeout')
     uint32 DnsWinsLookupTimeout = 250;

    // Cache timeout ('dns_dns_wins_cache_timeout')
     uint32 DnsWinsCacheTimeout = 251;

    // Number of WINS servers ('dns_dns_wins_nb_wins_servers')
     uint32 DnsWinsNbWinsServers = 252;

    // WINS Server Address ('dns_dns_wins_wins_server')
     bytes DnsWinsWinsServer = 253;

    // Local Flag ('dns_dns_winsr_local_flag')
     bool DnsWinsrLocalFlag = 254;

    // Lookup timeout ('dns_dns_winsr_lookup_timeout')
     uint32 DnsWinsrLookupTimeout = 255;

    // Cache timeout ('dns_dns_winsr_cache_timeout')
     uint32 DnsWinsrCacheTimeout = 256;

    // Name Result Domain ('dns_dns_winsr_name_result_domain')
     string DnsWinsrNameResultDomain = 257;

    // Data ('dns_dns_data')
     bytes DnsData = 258;

}
