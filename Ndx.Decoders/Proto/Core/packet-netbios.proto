syntax = "proto3";
package Ndx.Decoders.Core;
message Netbios {
   // Command ('netbios_netbios_command')
   uint32 NetbiosCommand = 1;

   // Length ('netbios_netbios_hdr_len')
   uint32 NetbiosHdrLen = 2;

   // Delimiter ('netbios_netbios_delimiter')
   uint32 NetbiosDelimiter = 3;

   // Transmit Correlator ('netbios_netbios_xmit_corrl')
   uint32 NetbiosXmitCorrl = 4;

   // Response Correlator ('netbios_netbios_resp_corrl')
   uint32 NetbiosRespCorrl = 5;

   // Caller's Name Type ('netbios_netbios_call_name_type')
   uint32 NetbiosCallNameType = 6;

   // NetBIOS Name Type ('netbios_netbios_nb_name_type')
   uint32 NetbiosNbNameType = 7;

   // NetBIOS Name ('netbios_netbios_nb_name')
   string NetbiosNbName = 8;

   // NetBIOS Version ('netbios_netbios_version')
   bool NetbiosVersion = 9;

   // Flags ('netbios_netbios_no_receive_flags')
   uint32 NetbiosNoReceiveFlags = 10;

   // SEND.NO.ACK data received ('netbios_no_receive_flags_netbios_no_receive_flags_send_no_ack')
   bool NetbiosNoReceiveFlagsSendNoAck = 11;

   // Largest Frame ('netbios_netbios_largest_frame')
   uint32 NetbiosLargestFrame = 12;

   // Length of status buffer ('netbios_netbios_status_buffer_len')
   uint32 NetbiosStatusBufferLen = 13;

   // Status ('netbios_netbios_status')
   uint32 NetbiosStatus = 14;

   // Name type ('netbios_netbios_name_type')
   uint32 NetbiosNameType = 15;

   // Maximum data receive size ('netbios_netbios_max_data_recv_size')
   uint32 NetbiosMaxDataRecvSize = 16;

   // Termination indicator ('netbios_netbios_termination_indicator')
   uint32 NetbiosTerminationIndicator = 17;

   // Number of data bytes accepted ('netbios_netbios_num_data_bytes_accepted')
   uint32 NetbiosNumDataBytesAccepted = 18;

   // Local Session No. ('netbios_netbios_local_session')
   uint32 NetbiosLocalSession = 19;

   // Remote Session No. ('netbios_netbios_remote_session')
   uint32 NetbiosRemoteSession = 20;

   // Flags ('netbios_netbios_flags')
   uint32 NetbiosFlags = 21;

   // Handle SEND.NO.ACK ('netbios_flags_netbios_flags_send_no_ack')
   bool NetbiosFlagsSendNoAck = 22;

   // Acknowledge ('netbios_flags_netbios_flags_ack')
   bool NetbiosFlagsAck = 23;

   // Acknowledge with data ('netbios_flags_netbios_flags_ack_with_data')
   bool NetbiosFlagsAckWithData = 24;

   // Acknowledge expected ('netbios_flags_netbios_flags_ack_expected')
   bool NetbiosFlagsAckExpected = 25;

   // RECEIVE_CONTINUE requested ('netbios_flags_netbios_flags_recv_cont_req')
   bool NetbiosFlagsRecvContReq = 26;

   // DATA2 value ('netbios_netbios_data2')
   uint32 NetbiosData2 = 27;

   // Data length exceeds maximum frame size ('netbios_data2_netbios_data2_frame')
   bool NetbiosData2Frame = 28;

   // Data length exceeds user's buffer ('netbios_data2_netbios_data2_user')
   bool NetbiosData2User = 29;

   // Status data length ('netbios_data2_netbios_data2_status')
   uint32 NetbiosData2Status = 30;

   // Sender's MAC Address ('netbios_netbios_datagram_mac')
   bytes NetbiosDatagramMac = 31;

   // Sender's Node Address ('netbios_netbios_datagram_bcast_mac')
   bytes NetbiosDatagramBcastMac = 32;

   // Re-sync indicator ('netbios_netbios_resync_indicator')
   uint32 NetbiosResyncIndicator = 33;

   // Status request ('netbios_netbios_status_request')
   uint32 NetbiosStatusRequest = 34;

   // Local Session No. ('netbios_netbios_local_session_no')
   uint32 NetbiosLocalSessionNo = 35;

   // State of name ('netbios_netbios_state_of_name')
   uint32 NetbiosStateOfName = 36;

   // Status response ('netbios_netbios_status_response')
   uint32 NetbiosStatusResponse = 37;

   // Fragment overlap ('netbios_fragment_netbios_fragment_overlap')
   bool NetbiosFragmentOverlap = 38;

   // Conflicting data in fragment overlap ('netbios_fragment_overlap_netbios_fragment_overlap_conflict')
   bool NetbiosFragmentOverlapConflict = 39;

   // Multiple tail fragments found ('netbios_fragment_netbios_fragment_multipletails')
   bool NetbiosFragmentMultipletails = 40;

   // Fragment too long ('netbios_fragment_netbios_fragment_toolongfragment')
   bool NetbiosFragmentToolongfragment = 41;

   // Defragmentation error ('netbios_fragment_netbios_fragment_error')
   int64 NetbiosFragmentError = 42;

   // Fragment count ('netbios_fragment_netbios_fragment_count')
   uint32 NetbiosFragmentCount = 43;

   // NetBIOS Fragment ('netbios_netbios_fragment')
   int64 NetbiosFragment = 44;

   // NetBIOS Fragments ('netbios_netbios_fragments')
   int32 NetbiosFragments = 45;

   // Reassembled NetBIOS length ('netbios_netbios_reassembled_length')
   uint32 NetbiosReassembledLength = 46;

}
