---
ah.next_header:
  type: FT_UINT8
  base: BASE_DEC
  info: Next header
ah.length:
  type: FT_UINT8
  base: BASE_DEC
  info: Length
ah.reserved:
  type: FT_BYTES
  base: BASE_NONE
  info: Reserved
ah.spi:
  type: FT_UINT32
  base: BASE_HEX
  info: AH SPI
ah.icv:
  type: FT_BYTES
  base: BASE_NONE
  info: AH ICV
ah.sequence:
  type: FT_UINT32
  base: BASE_DEC
  info: AH Sequence
esp.spi:
  type: FT_UINT32
  base: BASE_HEX_DEC
  info: ESP SPI
esp.sequence:
  type: FT_UINT32
  base: BASE_DEC
  info: ESP Sequence
esp.pad:
  type: FT_BYTES
  base: BASE_NONE
  info: Pad
esp.pad_len:
  type: FT_UINT8
  base: BASE_DEC
  info: ESP Pad Length
esp.protocol:
  type: FT_UINT8
  base: BASE_HEX
  info: ESP Next Header
esp.authentication_data:
  type: FT_BYTES
  base: BASE_NONE
  info: Authentication Data
esp.iv:
  type: FT_BYTES
  base: BASE_NONE
  info: ESP IV
esp.icv_good:
  type: FT_BOOLEAN
  base: BASE_NONE
  info: Good
esp.icv_bad:
  type: FT_BOOLEAN
  base: BASE_NONE
  info: Bad
esp.sequence-analysis.expected-sn:
  type: FT_UINT32
  base: BASE_DEC
  info: Expected SN
esp.sequence-analysis.previous-frame:
  type: FT_FRAMENUM
  base: BASE_NONE
  info: Previous Frame
ipcomp.next_header:
  type: FT_UINT8
  base: BASE_HEX
  info: Next Header
ipcomp.flags:
  type: FT_UINT8
  base: BASE_HEX
  info: IPComp Flags
ipcomp.cpi:
  type: FT_UINT16
  base: BASE_HEX
  info: IPComp CPI
