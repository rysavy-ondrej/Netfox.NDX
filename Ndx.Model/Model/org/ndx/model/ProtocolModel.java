// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtocolModel.proto

package org.ndx.model;

public final class ProtocolModel {
  private ProtocolModel() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code ndx.model.FieldType}
   */
  public enum FieldType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * used for text labels with no value 
     * </pre>
     *
     * <code>FT_NONE = 0;</code>
     */
    FT_NONE(0),
    /**
     * <code>FT_PROTOCOL = 1;</code>
     */
    FT_PROTOCOL(1),
    /**
     * <pre>
     * TRUE and FALSE come from &lt;glib.h&gt; 
     * </pre>
     *
     * <code>FT_BOOLEAN = 2;</code>
     */
    FT_BOOLEAN(2),
    /**
     * <pre>
     * 1-octet character as 0-255 
     * </pre>
     *
     * <code>FT_CHAR = 3;</code>
     */
    FT_CHAR(3),
    /**
     * <code>FT_UINT8 = 4;</code>
     */
    FT_UINT8(4),
    /**
     * <code>FT_UINT16 = 5;</code>
     */
    FT_UINT16(5),
    /**
     * <pre>
     * really a UINT32, but displayed as 6 hex-digits if FD_HEX
     * </pre>
     *
     * <code>FT_UINT24 = 6;</code>
     */
    FT_UINT24(6),
    /**
     * <code>FT_UINT32 = 7;</code>
     */
    FT_UINT32(7),
    /**
     * <pre>
     * really a UINT64, but displayed as 10 hex-digits if FD_HEX
     * </pre>
     *
     * <code>FT_UINT40 = 8;</code>
     */
    FT_UINT40(8),
    /**
     * <pre>
     * really a UINT64, but displayed as 12 hex-digits if FD_HEX
     * </pre>
     *
     * <code>FT_UINT48 = 9;</code>
     */
    FT_UINT48(9),
    /**
     * <pre>
     * really a UINT64, but displayed as 14 hex-digits if FD_HEX
     * </pre>
     *
     * <code>FT_UINT56 = 10;</code>
     */
    FT_UINT56(10),
    /**
     * <code>FT_UINT64 = 11;</code>
     */
    FT_UINT64(11),
    /**
     * <code>FT_INT8 = 12;</code>
     */
    FT_INT8(12),
    /**
     * <code>FT_INT16 = 13;</code>
     */
    FT_INT16(13),
    /**
     * <pre>
     * same as for UINT24 
     * </pre>
     *
     * <code>FT_INT24 = 14;</code>
     */
    FT_INT24(14),
    /**
     * <code>FT_INT32 = 15;</code>
     */
    FT_INT32(15),
    /**
     * <pre>
     * same as for UINT40 
     * </pre>
     *
     * <code>FT_INT40 = 16;</code>
     */
    FT_INT40(16),
    /**
     * <pre>
     * same as for UINT48 
     * </pre>
     *
     * <code>FT_INT48 = 17;</code>
     */
    FT_INT48(17),
    /**
     * <pre>
     * same as for UINT56 
     * </pre>
     *
     * <code>FT_INT56 = 18;</code>
     */
    FT_INT56(18),
    /**
     * <code>FT_INT64 = 19;</code>
     */
    FT_INT64(19),
    /**
     * <code>FT_IEEE_11073_SFLOAT = 20;</code>
     */
    FT_IEEE_11073_SFLOAT(20),
    /**
     * <code>FT_IEEE_11073_FLOAT = 21;</code>
     */
    FT_IEEE_11073_FLOAT(21),
    /**
     * <code>FT_FLOAT = 22;</code>
     */
    FT_FLOAT(22),
    /**
     * <code>FT_DOUBLE = 23;</code>
     */
    FT_DOUBLE(23),
    /**
     * <code>FT_ABSOLUTE_TIME = 24;</code>
     */
    FT_ABSOLUTE_TIME(24),
    /**
     * <code>FT_RELATIVE_TIME = 25;</code>
     */
    FT_RELATIVE_TIME(25),
    /**
     * <code>FT_STRING = 26;</code>
     */
    FT_STRING(26),
    /**
     * <pre>
     * for use with proto_tree_add_item() 
     * </pre>
     *
     * <code>FT_STRINGZ = 27;</code>
     */
    FT_STRINGZ(27),
    /**
     * <pre>
     * for use with proto_tree_add_item() 
     * </pre>
     *
     * <code>FT_UINT_STRING = 28;</code>
     */
    FT_UINT_STRING(28),
    /**
     * <code>FT_ETHER = 29;</code>
     */
    FT_ETHER(29),
    /**
     * <code>FT_BYTES = 30;</code>
     */
    FT_BYTES(30),
    /**
     * <code>FT_UINT_BYTES = 31;</code>
     */
    FT_UINT_BYTES(31),
    /**
     * <code>FT_IPv4 = 32;</code>
     */
    FT_IPv4(32),
    /**
     * <code>FT_IPv6 = 33;</code>
     */
    FT_IPv6(33),
    /**
     * <code>FT_IPXNET = 34;</code>
     */
    FT_IPXNET(34),
    /**
     * <pre>
     * a UINT32, but if selected lets you go to frame with that number 
     * </pre>
     *
     * <code>FT_FRAMENUM = 35;</code>
     */
    FT_FRAMENUM(35),
    /**
     * <pre>
     * a compiled Perl-Compatible Regular Expression object 
     * </pre>
     *
     * <code>FT_PCRE = 36;</code>
     */
    FT_PCRE(36),
    /**
     * <pre>
     * GUID, UUID 
     * </pre>
     *
     * <code>FT_GUID = 37;</code>
     */
    FT_GUID(37),
    /**
     * <pre>
     * OBJECT IDENTIFIER 
     * </pre>
     *
     * <code>FT_OID = 38;</code>
     */
    FT_OID(38),
    /**
     * <code>FT_EUI64 = 39;</code>
     */
    FT_EUI64(39),
    /**
     * <code>FT_AX25 = 40;</code>
     */
    FT_AX25(40),
    /**
     * <code>FT_VINES = 41;</code>
     */
    FT_VINES(41),
    /**
     * <pre>
     * RELATIVE-OID 
     * </pre>
     *
     * <code>FT_REL_OID = 42;</code>
     */
    FT_REL_OID(42),
    /**
     * <code>FT_SYSTEM_ID = 43;</code>
     */
    FT_SYSTEM_ID(43),
    /**
     * <pre>
     * for use with proto_tree_add_item() 
     * </pre>
     *
     * <code>FT_STRINGZPAD = 44;</code>
     */
    FT_STRINGZPAD(44),
    /**
     * <code>FT_FCWWN = 45;</code>
     */
    FT_FCWWN(45),
    /**
     * <pre>
     * last item number plus one 
     * </pre>
     *
     * <code>FT_NUM_TYPES = 46;</code>
     */
    FT_NUM_TYPES(46),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * used for text labels with no value 
     * </pre>
     *
     * <code>FT_NONE = 0;</code>
     */
    public static final int FT_NONE_VALUE = 0;
    /**
     * <code>FT_PROTOCOL = 1;</code>
     */
    public static final int FT_PROTOCOL_VALUE = 1;
    /**
     * <pre>
     * TRUE and FALSE come from &lt;glib.h&gt; 
     * </pre>
     *
     * <code>FT_BOOLEAN = 2;</code>
     */
    public static final int FT_BOOLEAN_VALUE = 2;
    /**
     * <pre>
     * 1-octet character as 0-255 
     * </pre>
     *
     * <code>FT_CHAR = 3;</code>
     */
    public static final int FT_CHAR_VALUE = 3;
    /**
     * <code>FT_UINT8 = 4;</code>
     */
    public static final int FT_UINT8_VALUE = 4;
    /**
     * <code>FT_UINT16 = 5;</code>
     */
    public static final int FT_UINT16_VALUE = 5;
    /**
     * <pre>
     * really a UINT32, but displayed as 6 hex-digits if FD_HEX
     * </pre>
     *
     * <code>FT_UINT24 = 6;</code>
     */
    public static final int FT_UINT24_VALUE = 6;
    /**
     * <code>FT_UINT32 = 7;</code>
     */
    public static final int FT_UINT32_VALUE = 7;
    /**
     * <pre>
     * really a UINT64, but displayed as 10 hex-digits if FD_HEX
     * </pre>
     *
     * <code>FT_UINT40 = 8;</code>
     */
    public static final int FT_UINT40_VALUE = 8;
    /**
     * <pre>
     * really a UINT64, but displayed as 12 hex-digits if FD_HEX
     * </pre>
     *
     * <code>FT_UINT48 = 9;</code>
     */
    public static final int FT_UINT48_VALUE = 9;
    /**
     * <pre>
     * really a UINT64, but displayed as 14 hex-digits if FD_HEX
     * </pre>
     *
     * <code>FT_UINT56 = 10;</code>
     */
    public static final int FT_UINT56_VALUE = 10;
    /**
     * <code>FT_UINT64 = 11;</code>
     */
    public static final int FT_UINT64_VALUE = 11;
    /**
     * <code>FT_INT8 = 12;</code>
     */
    public static final int FT_INT8_VALUE = 12;
    /**
     * <code>FT_INT16 = 13;</code>
     */
    public static final int FT_INT16_VALUE = 13;
    /**
     * <pre>
     * same as for UINT24 
     * </pre>
     *
     * <code>FT_INT24 = 14;</code>
     */
    public static final int FT_INT24_VALUE = 14;
    /**
     * <code>FT_INT32 = 15;</code>
     */
    public static final int FT_INT32_VALUE = 15;
    /**
     * <pre>
     * same as for UINT40 
     * </pre>
     *
     * <code>FT_INT40 = 16;</code>
     */
    public static final int FT_INT40_VALUE = 16;
    /**
     * <pre>
     * same as for UINT48 
     * </pre>
     *
     * <code>FT_INT48 = 17;</code>
     */
    public static final int FT_INT48_VALUE = 17;
    /**
     * <pre>
     * same as for UINT56 
     * </pre>
     *
     * <code>FT_INT56 = 18;</code>
     */
    public static final int FT_INT56_VALUE = 18;
    /**
     * <code>FT_INT64 = 19;</code>
     */
    public static final int FT_INT64_VALUE = 19;
    /**
     * <code>FT_IEEE_11073_SFLOAT = 20;</code>
     */
    public static final int FT_IEEE_11073_SFLOAT_VALUE = 20;
    /**
     * <code>FT_IEEE_11073_FLOAT = 21;</code>
     */
    public static final int FT_IEEE_11073_FLOAT_VALUE = 21;
    /**
     * <code>FT_FLOAT = 22;</code>
     */
    public static final int FT_FLOAT_VALUE = 22;
    /**
     * <code>FT_DOUBLE = 23;</code>
     */
    public static final int FT_DOUBLE_VALUE = 23;
    /**
     * <code>FT_ABSOLUTE_TIME = 24;</code>
     */
    public static final int FT_ABSOLUTE_TIME_VALUE = 24;
    /**
     * <code>FT_RELATIVE_TIME = 25;</code>
     */
    public static final int FT_RELATIVE_TIME_VALUE = 25;
    /**
     * <code>FT_STRING = 26;</code>
     */
    public static final int FT_STRING_VALUE = 26;
    /**
     * <pre>
     * for use with proto_tree_add_item() 
     * </pre>
     *
     * <code>FT_STRINGZ = 27;</code>
     */
    public static final int FT_STRINGZ_VALUE = 27;
    /**
     * <pre>
     * for use with proto_tree_add_item() 
     * </pre>
     *
     * <code>FT_UINT_STRING = 28;</code>
     */
    public static final int FT_UINT_STRING_VALUE = 28;
    /**
     * <code>FT_ETHER = 29;</code>
     */
    public static final int FT_ETHER_VALUE = 29;
    /**
     * <code>FT_BYTES = 30;</code>
     */
    public static final int FT_BYTES_VALUE = 30;
    /**
     * <code>FT_UINT_BYTES = 31;</code>
     */
    public static final int FT_UINT_BYTES_VALUE = 31;
    /**
     * <code>FT_IPv4 = 32;</code>
     */
    public static final int FT_IPv4_VALUE = 32;
    /**
     * <code>FT_IPv6 = 33;</code>
     */
    public static final int FT_IPv6_VALUE = 33;
    /**
     * <code>FT_IPXNET = 34;</code>
     */
    public static final int FT_IPXNET_VALUE = 34;
    /**
     * <pre>
     * a UINT32, but if selected lets you go to frame with that number 
     * </pre>
     *
     * <code>FT_FRAMENUM = 35;</code>
     */
    public static final int FT_FRAMENUM_VALUE = 35;
    /**
     * <pre>
     * a compiled Perl-Compatible Regular Expression object 
     * </pre>
     *
     * <code>FT_PCRE = 36;</code>
     */
    public static final int FT_PCRE_VALUE = 36;
    /**
     * <pre>
     * GUID, UUID 
     * </pre>
     *
     * <code>FT_GUID = 37;</code>
     */
    public static final int FT_GUID_VALUE = 37;
    /**
     * <pre>
     * OBJECT IDENTIFIER 
     * </pre>
     *
     * <code>FT_OID = 38;</code>
     */
    public static final int FT_OID_VALUE = 38;
    /**
     * <code>FT_EUI64 = 39;</code>
     */
    public static final int FT_EUI64_VALUE = 39;
    /**
     * <code>FT_AX25 = 40;</code>
     */
    public static final int FT_AX25_VALUE = 40;
    /**
     * <code>FT_VINES = 41;</code>
     */
    public static final int FT_VINES_VALUE = 41;
    /**
     * <pre>
     * RELATIVE-OID 
     * </pre>
     *
     * <code>FT_REL_OID = 42;</code>
     */
    public static final int FT_REL_OID_VALUE = 42;
    /**
     * <code>FT_SYSTEM_ID = 43;</code>
     */
    public static final int FT_SYSTEM_ID_VALUE = 43;
    /**
     * <pre>
     * for use with proto_tree_add_item() 
     * </pre>
     *
     * <code>FT_STRINGZPAD = 44;</code>
     */
    public static final int FT_STRINGZPAD_VALUE = 44;
    /**
     * <code>FT_FCWWN = 45;</code>
     */
    public static final int FT_FCWWN_VALUE = 45;
    /**
     * <pre>
     * last item number plus one 
     * </pre>
     *
     * <code>FT_NUM_TYPES = 46;</code>
     */
    public static final int FT_NUM_TYPES_VALUE = 46;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FieldType valueOf(int value) {
      return forNumber(value);
    }

    public static FieldType forNumber(int value) {
      switch (value) {
        case 0: return FT_NONE;
        case 1: return FT_PROTOCOL;
        case 2: return FT_BOOLEAN;
        case 3: return FT_CHAR;
        case 4: return FT_UINT8;
        case 5: return FT_UINT16;
        case 6: return FT_UINT24;
        case 7: return FT_UINT32;
        case 8: return FT_UINT40;
        case 9: return FT_UINT48;
        case 10: return FT_UINT56;
        case 11: return FT_UINT64;
        case 12: return FT_INT8;
        case 13: return FT_INT16;
        case 14: return FT_INT24;
        case 15: return FT_INT32;
        case 16: return FT_INT40;
        case 17: return FT_INT48;
        case 18: return FT_INT56;
        case 19: return FT_INT64;
        case 20: return FT_IEEE_11073_SFLOAT;
        case 21: return FT_IEEE_11073_FLOAT;
        case 22: return FT_FLOAT;
        case 23: return FT_DOUBLE;
        case 24: return FT_ABSOLUTE_TIME;
        case 25: return FT_RELATIVE_TIME;
        case 26: return FT_STRING;
        case 27: return FT_STRINGZ;
        case 28: return FT_UINT_STRING;
        case 29: return FT_ETHER;
        case 30: return FT_BYTES;
        case 31: return FT_UINT_BYTES;
        case 32: return FT_IPv4;
        case 33: return FT_IPv6;
        case 34: return FT_IPXNET;
        case 35: return FT_FRAMENUM;
        case 36: return FT_PCRE;
        case 37: return FT_GUID;
        case 38: return FT_OID;
        case 39: return FT_EUI64;
        case 40: return FT_AX25;
        case 41: return FT_VINES;
        case 42: return FT_REL_OID;
        case 43: return FT_SYSTEM_ID;
        case 44: return FT_STRINGZPAD;
        case 45: return FT_FCWWN;
        case 46: return FT_NUM_TYPES;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FieldType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FieldType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FieldType>() {
            public FieldType findValueByNumber(int number) {
              return FieldType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.ndx.model.ProtocolModel.getDescriptor().getEnumTypes().get(0);
    }

    private static final FieldType[] VALUES = values();

    public static FieldType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private FieldType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ndx.model.FieldType)
  }

  /**
   * Protobuf enum {@code ndx.model.FieldDisplay}
   */
  public enum FieldDisplay
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     **&lt; none 
     * </pre>
     *
     * <code>BASE_NONE = 0;</code>
     */
    BASE_NONE(0),
    /**
     * <pre>
     **&lt; decimal 
     * </pre>
     *
     * <code>BASE_DEC = 1;</code>
     */
    BASE_DEC(1),
    /**
     * <pre>
     **&lt; hexadecimal 
     * </pre>
     *
     * <code>BASE_HEX = 2;</code>
     */
    BASE_HEX(2),
    /**
     * <pre>
     **&lt; octal 
     * </pre>
     *
     * <code>BASE_OCT = 3;</code>
     */
    BASE_OCT(3),
    /**
     * <pre>
     **&lt; decimal (hexadecimal) 
     * </pre>
     *
     * <code>BASE_DEC_HEX = 4;</code>
     */
    BASE_DEC_HEX(4),
    /**
     * <pre>
     **&lt; hexadecimal (decimal) 
     * </pre>
     *
     * <code>BASE_HEX_DEC = 5;</code>
     */
    BASE_HEX_DEC(5),
    /**
     * <pre>
     **&lt; call custom routine (in -&gt;strings) to format 
     * </pre>
     *
     * <code>BASE_CUSTOM = 6;</code>
     */
    BASE_CUSTOM(6),
    /**
     * <pre>
     **&lt; shows non-printable UNICODE characters as &#92;&#92;uXXXX (XXX for now non-printable characters display depends on UI) 
     * </pre>
     *
     * <code>STR_UNICODE = 7;</code>
     */
    STR_UNICODE(7),
    /**
     * <pre>
     **&lt; hexadecimal bytes with a period (.) between each byte 
     * </pre>
     *
     * <code>SEP_DOT = 8;</code>
     */
    SEP_DOT(8),
    /**
     * <pre>
     **&lt; hexadecimal bytes with a dash (-) between each byte 
     * </pre>
     *
     * <code>SEP_DASH = 9;</code>
     */
    SEP_DASH(9),
    /**
     * <pre>
     **&lt; hexadecimal bytes with a colon (:) between each byte 
     * </pre>
     *
     * <code>SEP_COLON = 10;</code>
     */
    SEP_COLON(10),
    /**
     * <pre>
     **&lt; hexadecimal bytes with a space between each byte 
     * </pre>
     *
     * <code>SEP_SPACE = 11;</code>
     */
    SEP_SPACE(11),
    /**
     * <pre>
     * Address types 
     * </pre>
     *
     * <code>BASE_NETMASK = 12;</code>
     */
    BASE_NETMASK(12),
    /**
     * <pre>
     * Port types 
     * </pre>
     *
     * <code>BASE_PT_UDP = 13;</code>
     */
    BASE_PT_UDP(13),
    /**
     * <pre>
     **&lt; TCP port 
     * </pre>
     *
     * <code>BASE_PT_TCP = 14;</code>
     */
    BASE_PT_TCP(14),
    /**
     * <pre>
     **&lt; DCCP port 
     * </pre>
     *
     * <code>BASE_PT_DCCP = 15;</code>
     */
    BASE_PT_DCCP(15),
    /**
     * <pre>
     **&lt; SCTP port 
     * </pre>
     *
     * <code>BASE_PT_SCTP = 16;</code>
     */
    BASE_PT_SCTP(16),
    /**
     * <pre>
     * OUI types 
     * </pre>
     *
     * <code>BASE_OUI = 17;</code>
     */
    BASE_OUI(17),
    /**
     * <code>ABSOLUTE_TIME_LOCAL = 20;</code>
     */
    ABSOLUTE_TIME_LOCAL(20),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     **&lt; none 
     * </pre>
     *
     * <code>BASE_NONE = 0;</code>
     */
    public static final int BASE_NONE_VALUE = 0;
    /**
     * <pre>
     **&lt; decimal 
     * </pre>
     *
     * <code>BASE_DEC = 1;</code>
     */
    public static final int BASE_DEC_VALUE = 1;
    /**
     * <pre>
     **&lt; hexadecimal 
     * </pre>
     *
     * <code>BASE_HEX = 2;</code>
     */
    public static final int BASE_HEX_VALUE = 2;
    /**
     * <pre>
     **&lt; octal 
     * </pre>
     *
     * <code>BASE_OCT = 3;</code>
     */
    public static final int BASE_OCT_VALUE = 3;
    /**
     * <pre>
     **&lt; decimal (hexadecimal) 
     * </pre>
     *
     * <code>BASE_DEC_HEX = 4;</code>
     */
    public static final int BASE_DEC_HEX_VALUE = 4;
    /**
     * <pre>
     **&lt; hexadecimal (decimal) 
     * </pre>
     *
     * <code>BASE_HEX_DEC = 5;</code>
     */
    public static final int BASE_HEX_DEC_VALUE = 5;
    /**
     * <pre>
     **&lt; call custom routine (in -&gt;strings) to format 
     * </pre>
     *
     * <code>BASE_CUSTOM = 6;</code>
     */
    public static final int BASE_CUSTOM_VALUE = 6;
    /**
     * <pre>
     **&lt; shows non-printable UNICODE characters as &#92;&#92;uXXXX (XXX for now non-printable characters display depends on UI) 
     * </pre>
     *
     * <code>STR_UNICODE = 7;</code>
     */
    public static final int STR_UNICODE_VALUE = 7;
    /**
     * <pre>
     **&lt; hexadecimal bytes with a period (.) between each byte 
     * </pre>
     *
     * <code>SEP_DOT = 8;</code>
     */
    public static final int SEP_DOT_VALUE = 8;
    /**
     * <pre>
     **&lt; hexadecimal bytes with a dash (-) between each byte 
     * </pre>
     *
     * <code>SEP_DASH = 9;</code>
     */
    public static final int SEP_DASH_VALUE = 9;
    /**
     * <pre>
     **&lt; hexadecimal bytes with a colon (:) between each byte 
     * </pre>
     *
     * <code>SEP_COLON = 10;</code>
     */
    public static final int SEP_COLON_VALUE = 10;
    /**
     * <pre>
     **&lt; hexadecimal bytes with a space between each byte 
     * </pre>
     *
     * <code>SEP_SPACE = 11;</code>
     */
    public static final int SEP_SPACE_VALUE = 11;
    /**
     * <pre>
     * Address types 
     * </pre>
     *
     * <code>BASE_NETMASK = 12;</code>
     */
    public static final int BASE_NETMASK_VALUE = 12;
    /**
     * <pre>
     * Port types 
     * </pre>
     *
     * <code>BASE_PT_UDP = 13;</code>
     */
    public static final int BASE_PT_UDP_VALUE = 13;
    /**
     * <pre>
     **&lt; TCP port 
     * </pre>
     *
     * <code>BASE_PT_TCP = 14;</code>
     */
    public static final int BASE_PT_TCP_VALUE = 14;
    /**
     * <pre>
     **&lt; DCCP port 
     * </pre>
     *
     * <code>BASE_PT_DCCP = 15;</code>
     */
    public static final int BASE_PT_DCCP_VALUE = 15;
    /**
     * <pre>
     **&lt; SCTP port 
     * </pre>
     *
     * <code>BASE_PT_SCTP = 16;</code>
     */
    public static final int BASE_PT_SCTP_VALUE = 16;
    /**
     * <pre>
     * OUI types 
     * </pre>
     *
     * <code>BASE_OUI = 17;</code>
     */
    public static final int BASE_OUI_VALUE = 17;
    /**
     * <code>ABSOLUTE_TIME_LOCAL = 20;</code>
     */
    public static final int ABSOLUTE_TIME_LOCAL_VALUE = 20;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FieldDisplay valueOf(int value) {
      return forNumber(value);
    }

    public static FieldDisplay forNumber(int value) {
      switch (value) {
        case 0: return BASE_NONE;
        case 1: return BASE_DEC;
        case 2: return BASE_HEX;
        case 3: return BASE_OCT;
        case 4: return BASE_DEC_HEX;
        case 5: return BASE_HEX_DEC;
        case 6: return BASE_CUSTOM;
        case 7: return STR_UNICODE;
        case 8: return SEP_DOT;
        case 9: return SEP_DASH;
        case 10: return SEP_COLON;
        case 11: return SEP_SPACE;
        case 12: return BASE_NETMASK;
        case 13: return BASE_PT_UDP;
        case 14: return BASE_PT_TCP;
        case 15: return BASE_PT_DCCP;
        case 16: return BASE_PT_SCTP;
        case 17: return BASE_OUI;
        case 20: return ABSOLUTE_TIME_LOCAL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FieldDisplay>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FieldDisplay> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FieldDisplay>() {
            public FieldDisplay findValueByNumber(int number) {
              return FieldDisplay.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.ndx.model.ProtocolModel.getDescriptor().getEnumTypes().get(1);
    }

    private static final FieldDisplay[] VALUES = values();

    public static FieldDisplay valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private FieldDisplay(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ndx.model.FieldDisplay)
  }

  public interface ProtocolFieldOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ndx.model.ProtocolField)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *&#47; &lt;summary&gt;
     * / Full name of this field.
     * / &lt;/summary&gt;
     * </pre>
     *
     * <code>string Name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     *&#47; &lt;summary&gt;
     * / Full name of this field.
     * / &lt;/summary&gt;
     * </pre>
     *
     * <code>string Name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     *&#47; &lt;summary&gt;
     * /	Field type, one of FT_  value.
     * /	&lt;/summary&gt;
     * </pre>
     *
     * <code>.ndx.model.FieldType Type = 2;</code>
     */
    int getTypeValue();
    /**
     * <pre>
     *&#47; &lt;summary&gt;
     * /	Field type, one of FT_  value.
     * /	&lt;/summary&gt;
     * </pre>
     *
     * <code>.ndx.model.FieldType Type = 2;</code>
     */
    org.ndx.model.ProtocolModel.FieldType getType();

    /**
     * <pre>
     *&#47;	&lt;summary&gt;
     * /	One of BASE_, or field bit-width if FT_BOOLEAN 
     * /	&lt;/summary&gt;
     * </pre>
     *
     * <code>.ndx.model.FieldDisplay Display = 3;</code>
     */
    int getDisplayValue();
    /**
     * <pre>
     *&#47;	&lt;summary&gt;
     * /	One of BASE_, or field bit-width if FT_BOOLEAN 
     * /	&lt;/summary&gt;
     * </pre>
     *
     * <code>.ndx.model.FieldDisplay Display = 3;</code>
     */
    org.ndx.model.ProtocolModel.FieldDisplay getDisplay();

    /**
     * <pre>
     *&#47;	&lt;summary&gt;
     * / Brief description of field.
     * /	&lt;/summary&gt;
     * </pre>
     *
     * <code>string Info = 4;</code>
     */
    java.lang.String getInfo();
    /**
     * <pre>
     *&#47;	&lt;summary&gt;
     * / Brief description of field.
     * /	&lt;/summary&gt;
     * </pre>
     *
     * <code>string Info = 4;</code>
     */
    com.google.protobuf.ByteString
        getInfoBytes();
  }
  /**
   * <pre>
   *&#47; &lt;summary&gt; 
   * /	Information describing a header field.
   * /	&lt;/summary&gt;
   * </pre>
   *
   * Protobuf type {@code ndx.model.ProtocolField}
   */
  public  static final class ProtocolField extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ndx.model.ProtocolField)
      ProtocolFieldOrBuilder {
    // Use ProtocolField.newBuilder() to construct.
    private ProtocolField(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProtocolField() {
      name_ = "";
      type_ = 0;
      display_ = 0;
      info_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ProtocolField(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              display_ = rawValue;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              info_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.ndx.model.ProtocolModel.internal_static_ndx_model_ProtocolField_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.ndx.model.ProtocolModel.internal_static_ndx_model_ProtocolField_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.ndx.model.ProtocolModel.ProtocolField.class, org.ndx.model.ProtocolModel.ProtocolField.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     *&#47; &lt;summary&gt;
     * / Full name of this field.
     * / &lt;/summary&gt;
     * </pre>
     *
     * <code>string Name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *&#47; &lt;summary&gt;
     * / Full name of this field.
     * / &lt;/summary&gt;
     * </pre>
     *
     * <code>string Name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <pre>
     *&#47; &lt;summary&gt;
     * /	Field type, one of FT_  value.
     * /	&lt;/summary&gt;
     * </pre>
     *
     * <code>.ndx.model.FieldType Type = 2;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     *&#47; &lt;summary&gt;
     * /	Field type, one of FT_  value.
     * /	&lt;/summary&gt;
     * </pre>
     *
     * <code>.ndx.model.FieldType Type = 2;</code>
     */
    public org.ndx.model.ProtocolModel.FieldType getType() {
      org.ndx.model.ProtocolModel.FieldType result = org.ndx.model.ProtocolModel.FieldType.valueOf(type_);
      return result == null ? org.ndx.model.ProtocolModel.FieldType.UNRECOGNIZED : result;
    }

    public static final int DISPLAY_FIELD_NUMBER = 3;
    private int display_;
    /**
     * <pre>
     *&#47;	&lt;summary&gt;
     * /	One of BASE_, or field bit-width if FT_BOOLEAN 
     * /	&lt;/summary&gt;
     * </pre>
     *
     * <code>.ndx.model.FieldDisplay Display = 3;</code>
     */
    public int getDisplayValue() {
      return display_;
    }
    /**
     * <pre>
     *&#47;	&lt;summary&gt;
     * /	One of BASE_, or field bit-width if FT_BOOLEAN 
     * /	&lt;/summary&gt;
     * </pre>
     *
     * <code>.ndx.model.FieldDisplay Display = 3;</code>
     */
    public org.ndx.model.ProtocolModel.FieldDisplay getDisplay() {
      org.ndx.model.ProtocolModel.FieldDisplay result = org.ndx.model.ProtocolModel.FieldDisplay.valueOf(display_);
      return result == null ? org.ndx.model.ProtocolModel.FieldDisplay.UNRECOGNIZED : result;
    }

    public static final int INFO_FIELD_NUMBER = 4;
    private volatile java.lang.Object info_;
    /**
     * <pre>
     *&#47;	&lt;summary&gt;
     * / Brief description of field.
     * /	&lt;/summary&gt;
     * </pre>
     *
     * <code>string Info = 4;</code>
     */
    public java.lang.String getInfo() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        info_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *&#47;	&lt;summary&gt;
     * / Brief description of field.
     * /	&lt;/summary&gt;
     * </pre>
     *
     * <code>string Info = 4;</code>
     */
    public com.google.protobuf.ByteString
        getInfoBytes() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        info_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (type_ != org.ndx.model.ProtocolModel.FieldType.FT_NONE.getNumber()) {
        output.writeEnum(2, type_);
      }
      if (display_ != org.ndx.model.ProtocolModel.FieldDisplay.BASE_NONE.getNumber()) {
        output.writeEnum(3, display_);
      }
      if (!getInfoBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, info_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (type_ != org.ndx.model.ProtocolModel.FieldType.FT_NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, type_);
      }
      if (display_ != org.ndx.model.ProtocolModel.FieldDisplay.BASE_NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, display_);
      }
      if (!getInfoBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, info_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.ndx.model.ProtocolModel.ProtocolField)) {
        return super.equals(obj);
      }
      org.ndx.model.ProtocolModel.ProtocolField other = (org.ndx.model.ProtocolModel.ProtocolField) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && type_ == other.type_;
      result = result && display_ == other.display_;
      result = result && getInfo()
          .equals(other.getInfo());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + DISPLAY_FIELD_NUMBER;
      hash = (53 * hash) + display_;
      hash = (37 * hash) + INFO_FIELD_NUMBER;
      hash = (53 * hash) + getInfo().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.ndx.model.ProtocolModel.ProtocolField parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.ndx.model.ProtocolModel.ProtocolField parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.ndx.model.ProtocolModel.ProtocolField parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.ndx.model.ProtocolModel.ProtocolField parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.ndx.model.ProtocolModel.ProtocolField parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.ndx.model.ProtocolModel.ProtocolField parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.ndx.model.ProtocolModel.ProtocolField parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.ndx.model.ProtocolModel.ProtocolField parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.ndx.model.ProtocolModel.ProtocolField parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.ndx.model.ProtocolModel.ProtocolField parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.ndx.model.ProtocolModel.ProtocolField parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.ndx.model.ProtocolModel.ProtocolField parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.ndx.model.ProtocolModel.ProtocolField prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *&#47; &lt;summary&gt; 
     * /	Information describing a header field.
     * /	&lt;/summary&gt;
     * </pre>
     *
     * Protobuf type {@code ndx.model.ProtocolField}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ndx.model.ProtocolField)
        org.ndx.model.ProtocolModel.ProtocolFieldOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.ndx.model.ProtocolModel.internal_static_ndx_model_ProtocolField_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.ndx.model.ProtocolModel.internal_static_ndx_model_ProtocolField_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.ndx.model.ProtocolModel.ProtocolField.class, org.ndx.model.ProtocolModel.ProtocolField.Builder.class);
      }

      // Construct using org.ndx.model.ProtocolModel.ProtocolField.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        type_ = 0;

        display_ = 0;

        info_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.ndx.model.ProtocolModel.internal_static_ndx_model_ProtocolField_descriptor;
      }

      public org.ndx.model.ProtocolModel.ProtocolField getDefaultInstanceForType() {
        return org.ndx.model.ProtocolModel.ProtocolField.getDefaultInstance();
      }

      public org.ndx.model.ProtocolModel.ProtocolField build() {
        org.ndx.model.ProtocolModel.ProtocolField result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.ndx.model.ProtocolModel.ProtocolField buildPartial() {
        org.ndx.model.ProtocolModel.ProtocolField result = new org.ndx.model.ProtocolModel.ProtocolField(this);
        result.name_ = name_;
        result.type_ = type_;
        result.display_ = display_;
        result.info_ = info_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.ndx.model.ProtocolModel.ProtocolField) {
          return mergeFrom((org.ndx.model.ProtocolModel.ProtocolField)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.ndx.model.ProtocolModel.ProtocolField other) {
        if (other == org.ndx.model.ProtocolModel.ProtocolField.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.display_ != 0) {
          setDisplayValue(other.getDisplayValue());
        }
        if (!other.getInfo().isEmpty()) {
          info_ = other.info_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.ndx.model.ProtocolModel.ProtocolField parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.ndx.model.ProtocolModel.ProtocolField) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       *&#47; &lt;summary&gt;
       * / Full name of this field.
       * / &lt;/summary&gt;
       * </pre>
       *
       * <code>string Name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *&#47; &lt;summary&gt;
       * / Full name of this field.
       * / &lt;/summary&gt;
       * </pre>
       *
       * <code>string Name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *&#47; &lt;summary&gt;
       * / Full name of this field.
       * / &lt;/summary&gt;
       * </pre>
       *
       * <code>string Name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; &lt;summary&gt;
       * / Full name of this field.
       * / &lt;/summary&gt;
       * </pre>
       *
       * <code>string Name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; &lt;summary&gt;
       * / Full name of this field.
       * / &lt;/summary&gt;
       * </pre>
       *
       * <code>string Name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       *&#47; &lt;summary&gt;
       * /	Field type, one of FT_  value.
       * /	&lt;/summary&gt;
       * </pre>
       *
       * <code>.ndx.model.FieldType Type = 2;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       *&#47; &lt;summary&gt;
       * /	Field type, one of FT_  value.
       * /	&lt;/summary&gt;
       * </pre>
       *
       * <code>.ndx.model.FieldType Type = 2;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; &lt;summary&gt;
       * /	Field type, one of FT_  value.
       * /	&lt;/summary&gt;
       * </pre>
       *
       * <code>.ndx.model.FieldType Type = 2;</code>
       */
      public org.ndx.model.ProtocolModel.FieldType getType() {
        org.ndx.model.ProtocolModel.FieldType result = org.ndx.model.ProtocolModel.FieldType.valueOf(type_);
        return result == null ? org.ndx.model.ProtocolModel.FieldType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *&#47; &lt;summary&gt;
       * /	Field type, one of FT_  value.
       * /	&lt;/summary&gt;
       * </pre>
       *
       * <code>.ndx.model.FieldType Type = 2;</code>
       */
      public Builder setType(org.ndx.model.ProtocolModel.FieldType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; &lt;summary&gt;
       * /	Field type, one of FT_  value.
       * /	&lt;/summary&gt;
       * </pre>
       *
       * <code>.ndx.model.FieldType Type = 2;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int display_ = 0;
      /**
       * <pre>
       *&#47;	&lt;summary&gt;
       * /	One of BASE_, or field bit-width if FT_BOOLEAN 
       * /	&lt;/summary&gt;
       * </pre>
       *
       * <code>.ndx.model.FieldDisplay Display = 3;</code>
       */
      public int getDisplayValue() {
        return display_;
      }
      /**
       * <pre>
       *&#47;	&lt;summary&gt;
       * /	One of BASE_, or field bit-width if FT_BOOLEAN 
       * /	&lt;/summary&gt;
       * </pre>
       *
       * <code>.ndx.model.FieldDisplay Display = 3;</code>
       */
      public Builder setDisplayValue(int value) {
        display_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47;	&lt;summary&gt;
       * /	One of BASE_, or field bit-width if FT_BOOLEAN 
       * /	&lt;/summary&gt;
       * </pre>
       *
       * <code>.ndx.model.FieldDisplay Display = 3;</code>
       */
      public org.ndx.model.ProtocolModel.FieldDisplay getDisplay() {
        org.ndx.model.ProtocolModel.FieldDisplay result = org.ndx.model.ProtocolModel.FieldDisplay.valueOf(display_);
        return result == null ? org.ndx.model.ProtocolModel.FieldDisplay.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *&#47;	&lt;summary&gt;
       * /	One of BASE_, or field bit-width if FT_BOOLEAN 
       * /	&lt;/summary&gt;
       * </pre>
       *
       * <code>.ndx.model.FieldDisplay Display = 3;</code>
       */
      public Builder setDisplay(org.ndx.model.ProtocolModel.FieldDisplay value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        display_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47;	&lt;summary&gt;
       * /	One of BASE_, or field bit-width if FT_BOOLEAN 
       * /	&lt;/summary&gt;
       * </pre>
       *
       * <code>.ndx.model.FieldDisplay Display = 3;</code>
       */
      public Builder clearDisplay() {
        
        display_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object info_ = "";
      /**
       * <pre>
       *&#47;	&lt;summary&gt;
       * / Brief description of field.
       * /	&lt;/summary&gt;
       * </pre>
       *
       * <code>string Info = 4;</code>
       */
      public java.lang.String getInfo() {
        java.lang.Object ref = info_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          info_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *&#47;	&lt;summary&gt;
       * / Brief description of field.
       * /	&lt;/summary&gt;
       * </pre>
       *
       * <code>string Info = 4;</code>
       */
      public com.google.protobuf.ByteString
          getInfoBytes() {
        java.lang.Object ref = info_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          info_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *&#47;	&lt;summary&gt;
       * / Brief description of field.
       * /	&lt;/summary&gt;
       * </pre>
       *
       * <code>string Info = 4;</code>
       */
      public Builder setInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        info_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47;	&lt;summary&gt;
       * / Brief description of field.
       * /	&lt;/summary&gt;
       * </pre>
       *
       * <code>string Info = 4;</code>
       */
      public Builder clearInfo() {
        
        info_ = getDefaultInstance().getInfo();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47;	&lt;summary&gt;
       * / Brief description of field.
       * /	&lt;/summary&gt;
       * </pre>
       *
       * <code>string Info = 4;</code>
       */
      public Builder setInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        info_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ndx.model.ProtocolField)
    }

    // @@protoc_insertion_point(class_scope:ndx.model.ProtocolField)
    private static final org.ndx.model.ProtocolModel.ProtocolField DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.ndx.model.ProtocolModel.ProtocolField();
    }

    public static org.ndx.model.ProtocolModel.ProtocolField getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ProtocolField>
        PARSER = new com.google.protobuf.AbstractParser<ProtocolField>() {
      public ProtocolField parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ProtocolField(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ProtocolField> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProtocolField> getParserForType() {
      return PARSER;
    }

    public org.ndx.model.ProtocolModel.ProtocolField getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ProtocolOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ndx.model.Protocol)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string Name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>string Name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>map&lt;string, .ndx.model.ProtocolField&gt; Fields = 2;</code>
     */
    int getFieldsCount();
    /**
     * <code>map&lt;string, .ndx.model.ProtocolField&gt; Fields = 2;</code>
     */
    boolean containsFields(
        java.lang.String key);
    /**
     * Use {@link #getFieldsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, org.ndx.model.ProtocolModel.ProtocolField>
    getFields();
    /**
     * <code>map&lt;string, .ndx.model.ProtocolField&gt; Fields = 2;</code>
     */
    java.util.Map<java.lang.String, org.ndx.model.ProtocolModel.ProtocolField>
    getFieldsMap();
    /**
     * <code>map&lt;string, .ndx.model.ProtocolField&gt; Fields = 2;</code>
     */

    org.ndx.model.ProtocolModel.ProtocolField getFieldsOrDefault(
        java.lang.String key,
        org.ndx.model.ProtocolModel.ProtocolField defaultValue);
    /**
     * <code>map&lt;string, .ndx.model.ProtocolField&gt; Fields = 2;</code>
     */

    org.ndx.model.ProtocolModel.ProtocolField getFieldsOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code ndx.model.Protocol}
   */
  public  static final class Protocol extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ndx.model.Protocol)
      ProtocolOrBuilder {
    // Use Protocol.newBuilder() to construct.
    private Protocol(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Protocol() {
      name_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Protocol(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                fields_ = com.google.protobuf.MapField.newMapField(
                    FieldsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.String, org.ndx.model.ProtocolModel.ProtocolField>
              fields__ = input.readMessage(
                  FieldsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              fields_.getMutableMap().put(
                  fields__.getKey(), fields__.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.ndx.model.ProtocolModel.internal_static_ndx_model_Protocol_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetFields();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.ndx.model.ProtocolModel.internal_static_ndx_model_Protocol_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.ndx.model.ProtocolModel.Protocol.class, org.ndx.model.ProtocolModel.Protocol.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string Name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string Name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FIELDS_FIELD_NUMBER = 2;
    private static final class FieldsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, org.ndx.model.ProtocolModel.ProtocolField> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, org.ndx.model.ProtocolModel.ProtocolField>newDefaultInstance(
                  org.ndx.model.ProtocolModel.internal_static_ndx_model_Protocol_FieldsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  org.ndx.model.ProtocolModel.ProtocolField.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, org.ndx.model.ProtocolModel.ProtocolField> fields_;
    private com.google.protobuf.MapField<java.lang.String, org.ndx.model.ProtocolModel.ProtocolField>
    internalGetFields() {
      if (fields_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            FieldsDefaultEntryHolder.defaultEntry);
      }
      return fields_;
    }

    public int getFieldsCount() {
      return internalGetFields().getMap().size();
    }
    /**
     * <code>map&lt;string, .ndx.model.ProtocolField&gt; Fields = 2;</code>
     */

    public boolean containsFields(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetFields().getMap().containsKey(key);
    }
    /**
     * Use {@link #getFieldsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.ndx.model.ProtocolModel.ProtocolField> getFields() {
      return getFieldsMap();
    }
    /**
     * <code>map&lt;string, .ndx.model.ProtocolField&gt; Fields = 2;</code>
     */

    public java.util.Map<java.lang.String, org.ndx.model.ProtocolModel.ProtocolField> getFieldsMap() {
      return internalGetFields().getMap();
    }
    /**
     * <code>map&lt;string, .ndx.model.ProtocolField&gt; Fields = 2;</code>
     */

    public org.ndx.model.ProtocolModel.ProtocolField getFieldsOrDefault(
        java.lang.String key,
        org.ndx.model.ProtocolModel.ProtocolField defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, org.ndx.model.ProtocolModel.ProtocolField> map =
          internalGetFields().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .ndx.model.ProtocolField&gt; Fields = 2;</code>
     */

    public org.ndx.model.ProtocolModel.ProtocolField getFieldsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, org.ndx.model.ProtocolModel.ProtocolField> map =
          internalGetFields().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetFields(),
          FieldsDefaultEntryHolder.defaultEntry,
          2);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      for (java.util.Map.Entry<java.lang.String, org.ndx.model.ProtocolModel.ProtocolField> entry
           : internalGetFields().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, org.ndx.model.ProtocolModel.ProtocolField>
        fields__ = FieldsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, fields__);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.ndx.model.ProtocolModel.Protocol)) {
        return super.equals(obj);
      }
      org.ndx.model.ProtocolModel.Protocol other = (org.ndx.model.ProtocolModel.Protocol) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && internalGetFields().equals(
          other.internalGetFields());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (!internalGetFields().getMap().isEmpty()) {
        hash = (37 * hash) + FIELDS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetFields().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.ndx.model.ProtocolModel.Protocol parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.ndx.model.ProtocolModel.Protocol parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.ndx.model.ProtocolModel.Protocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.ndx.model.ProtocolModel.Protocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.ndx.model.ProtocolModel.Protocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.ndx.model.ProtocolModel.Protocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.ndx.model.ProtocolModel.Protocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.ndx.model.ProtocolModel.Protocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.ndx.model.ProtocolModel.Protocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.ndx.model.ProtocolModel.Protocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.ndx.model.ProtocolModel.Protocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.ndx.model.ProtocolModel.Protocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.ndx.model.ProtocolModel.Protocol prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ndx.model.Protocol}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ndx.model.Protocol)
        org.ndx.model.ProtocolModel.ProtocolOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.ndx.model.ProtocolModel.internal_static_ndx_model_Protocol_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetFields();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutableFields();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.ndx.model.ProtocolModel.internal_static_ndx_model_Protocol_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.ndx.model.ProtocolModel.Protocol.class, org.ndx.model.ProtocolModel.Protocol.Builder.class);
      }

      // Construct using org.ndx.model.ProtocolModel.Protocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        internalGetMutableFields().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.ndx.model.ProtocolModel.internal_static_ndx_model_Protocol_descriptor;
      }

      public org.ndx.model.ProtocolModel.Protocol getDefaultInstanceForType() {
        return org.ndx.model.ProtocolModel.Protocol.getDefaultInstance();
      }

      public org.ndx.model.ProtocolModel.Protocol build() {
        org.ndx.model.ProtocolModel.Protocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.ndx.model.ProtocolModel.Protocol buildPartial() {
        org.ndx.model.ProtocolModel.Protocol result = new org.ndx.model.ProtocolModel.Protocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.name_ = name_;
        result.fields_ = internalGetFields();
        result.fields_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.ndx.model.ProtocolModel.Protocol) {
          return mergeFrom((org.ndx.model.ProtocolModel.Protocol)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.ndx.model.ProtocolModel.Protocol other) {
        if (other == org.ndx.model.ProtocolModel.Protocol.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        internalGetMutableFields().mergeFrom(
            other.internalGetFields());
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.ndx.model.ProtocolModel.Protocol parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.ndx.model.ProtocolModel.Protocol) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>string Name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string Name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string Name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string Name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string Name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, org.ndx.model.ProtocolModel.ProtocolField> fields_;
      private com.google.protobuf.MapField<java.lang.String, org.ndx.model.ProtocolModel.ProtocolField>
      internalGetFields() {
        if (fields_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              FieldsDefaultEntryHolder.defaultEntry);
        }
        return fields_;
      }
      private com.google.protobuf.MapField<java.lang.String, org.ndx.model.ProtocolModel.ProtocolField>
      internalGetMutableFields() {
        onChanged();;
        if (fields_ == null) {
          fields_ = com.google.protobuf.MapField.newMapField(
              FieldsDefaultEntryHolder.defaultEntry);
        }
        if (!fields_.isMutable()) {
          fields_ = fields_.copy();
        }
        return fields_;
      }

      public int getFieldsCount() {
        return internalGetFields().getMap().size();
      }
      /**
       * <code>map&lt;string, .ndx.model.ProtocolField&gt; Fields = 2;</code>
       */

      public boolean containsFields(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetFields().getMap().containsKey(key);
      }
      /**
       * Use {@link #getFieldsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.ndx.model.ProtocolModel.ProtocolField> getFields() {
        return getFieldsMap();
      }
      /**
       * <code>map&lt;string, .ndx.model.ProtocolField&gt; Fields = 2;</code>
       */

      public java.util.Map<java.lang.String, org.ndx.model.ProtocolModel.ProtocolField> getFieldsMap() {
        return internalGetFields().getMap();
      }
      /**
       * <code>map&lt;string, .ndx.model.ProtocolField&gt; Fields = 2;</code>
       */

      public org.ndx.model.ProtocolModel.ProtocolField getFieldsOrDefault(
          java.lang.String key,
          org.ndx.model.ProtocolModel.ProtocolField defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, org.ndx.model.ProtocolModel.ProtocolField> map =
            internalGetFields().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .ndx.model.ProtocolField&gt; Fields = 2;</code>
       */

      public org.ndx.model.ProtocolModel.ProtocolField getFieldsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, org.ndx.model.ProtocolModel.ProtocolField> map =
            internalGetFields().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearFields() {
        internalGetMutableFields().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, .ndx.model.ProtocolField&gt; Fields = 2;</code>
       */

      public Builder removeFields(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableFields().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.ndx.model.ProtocolModel.ProtocolField>
      getMutableFields() {
        return internalGetMutableFields().getMutableMap();
      }
      /**
       * <code>map&lt;string, .ndx.model.ProtocolField&gt; Fields = 2;</code>
       */
      public Builder putFields(
          java.lang.String key,
          org.ndx.model.ProtocolModel.ProtocolField value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableFields().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, .ndx.model.ProtocolField&gt; Fields = 2;</code>
       */

      public Builder putAllFields(
          java.util.Map<java.lang.String, org.ndx.model.ProtocolModel.ProtocolField> values) {
        internalGetMutableFields().getMutableMap()
            .putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ndx.model.Protocol)
    }

    // @@protoc_insertion_point(class_scope:ndx.model.Protocol)
    private static final org.ndx.model.ProtocolModel.Protocol DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.ndx.model.ProtocolModel.Protocol();
    }

    public static org.ndx.model.ProtocolModel.Protocol getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Protocol>
        PARSER = new com.google.protobuf.AbstractParser<Protocol>() {
      public Protocol parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Protocol(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Protocol> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Protocol> getParserForType() {
      return PARSER;
    }

    public org.ndx.model.ProtocolModel.Protocol getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ndx_model_ProtocolField_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ndx_model_ProtocolField_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ndx_model_Protocol_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ndx_model_Protocol_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ndx_model_Protocol_FieldsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ndx_model_Protocol_FieldsEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023ProtocolModel.proto\022\tndx.model\032\017Consta" +
      "nts.proto\"y\n\rProtocolField\022\014\n\004Name\030\001 \001(\t" +
      "\022\"\n\004Type\030\002 \001(\0162\024.ndx.model.FieldType\022(\n\007" +
      "Display\030\003 \001(\0162\027.ndx.model.FieldDisplay\022\014" +
      "\n\004Info\030\004 \001(\t\"\222\001\n\010Protocol\022\014\n\004Name\030\001 \001(\t\022" +
      "/\n\006Fields\030\002 \003(\0132\037.ndx.model.Protocol.Fie" +
      "ldsEntry\032G\n\013FieldsEntry\022\013\n\003key\030\001 \001(\t\022\'\n\005" +
      "value\030\002 \001(\0132\030.ndx.model.ProtocolField:\0028" +
      "\001*\350\005\n\tFieldType\022\013\n\007FT_NONE\020\000\022\017\n\013FT_PROTO" +
      "COL\020\001\022\016\n\nFT_BOOLEAN\020\002\022\013\n\007FT_CHAR\020\003\022\014\n\010FT",
      "_UINT8\020\004\022\r\n\tFT_UINT16\020\005\022\r\n\tFT_UINT24\020\006\022\r" +
      "\n\tFT_UINT32\020\007\022\r\n\tFT_UINT40\020\010\022\r\n\tFT_UINT4" +
      "8\020\t\022\r\n\tFT_UINT56\020\n\022\r\n\tFT_UINT64\020\013\022\013\n\007FT_" +
      "INT8\020\014\022\014\n\010FT_INT16\020\r\022\014\n\010FT_INT24\020\016\022\014\n\010FT" +
      "_INT32\020\017\022\014\n\010FT_INT40\020\020\022\014\n\010FT_INT48\020\021\022\014\n\010" +
      "FT_INT56\020\022\022\014\n\010FT_INT64\020\023\022\030\n\024FT_IEEE_1107" +
      "3_SFLOAT\020\024\022\027\n\023FT_IEEE_11073_FLOAT\020\025\022\014\n\010F" +
      "T_FLOAT\020\026\022\r\n\tFT_DOUBLE\020\027\022\024\n\020FT_ABSOLUTE_" +
      "TIME\020\030\022\024\n\020FT_RELATIVE_TIME\020\031\022\r\n\tFT_STRIN" +
      "G\020\032\022\016\n\nFT_STRINGZ\020\033\022\022\n\016FT_UINT_STRING\020\034\022",
      "\014\n\010FT_ETHER\020\035\022\014\n\010FT_BYTES\020\036\022\021\n\rFT_UINT_B" +
      "YTES\020\037\022\013\n\007FT_IPv4\020 \022\013\n\007FT_IPv6\020!\022\r\n\tFT_I" +
      "PXNET\020\"\022\017\n\013FT_FRAMENUM\020#\022\013\n\007FT_PCRE\020$\022\013\n" +
      "\007FT_GUID\020%\022\n\n\006FT_OID\020&\022\014\n\010FT_EUI64\020\'\022\013\n\007" +
      "FT_AX25\020(\022\014\n\010FT_VINES\020)\022\016\n\nFT_REL_OID\020*\022" +
      "\020\n\014FT_SYSTEM_ID\020+\022\021\n\rFT_STRINGZPAD\020,\022\014\n\010" +
      "FT_FCWWN\020-\022\020\n\014FT_NUM_TYPES\020.*\305\002\n\014FieldDi" +
      "splay\022\r\n\tBASE_NONE\020\000\022\014\n\010BASE_DEC\020\001\022\014\n\010BA" +
      "SE_HEX\020\002\022\014\n\010BASE_OCT\020\003\022\020\n\014BASE_DEC_HEX\020\004" +
      "\022\020\n\014BASE_HEX_DEC\020\005\022\017\n\013BASE_CUSTOM\020\006\022\017\n\013S",
      "TR_UNICODE\020\007\022\013\n\007SEP_DOT\020\010\022\014\n\010SEP_DASH\020\t\022" +
      "\r\n\tSEP_COLON\020\n\022\r\n\tSEP_SPACE\020\013\022\020\n\014BASE_NE" +
      "TMASK\020\014\022\017\n\013BASE_PT_UDP\020\r\022\017\n\013BASE_PT_TCP\020" +
      "\016\022\020\n\014BASE_PT_DCCP\020\017\022\020\n\014BASE_PT_SCTP\020\020\022\014\n" +
      "\010BASE_OUI\020\021\022\027\n\023ABSOLUTE_TIME_LOCAL\020\024B\017\n\r" +
      "org.ndx.modelb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.ndx.model.Constants.getDescriptor(),
        }, assigner);
    internal_static_ndx_model_ProtocolField_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ndx_model_ProtocolField_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ndx_model_ProtocolField_descriptor,
        new java.lang.String[] { "Name", "Type", "Display", "Info", });
    internal_static_ndx_model_Protocol_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_ndx_model_Protocol_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ndx_model_Protocol_descriptor,
        new java.lang.String[] { "Name", "Fields", });
    internal_static_ndx_model_Protocol_FieldsEntry_descriptor =
      internal_static_ndx_model_Protocol_descriptor.getNestedTypes().get(0);
    internal_static_ndx_model_Protocol_FieldsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ndx_model_Protocol_FieldsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    org.ndx.model.Constants.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
