// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PacketModel.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Ndx.Model {

  /// <summary>Holder for reflection information generated from PacketModel.proto</summary>
  public static partial class PacketModelReflection {

    #region Descriptor
    /// <summary>File descriptor for PacketModel.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PacketModelReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFQYWNrZXRNb2RlbC5wcm90bxIJbmR4Lm1vZGVsIlkKBUZyYW1lEhMKC0Zy",
            "YW1lTnVtYmVyGAEgASgFEhMKC0ZyYW1lTGVuZ3RoGAIgASgFEhMKC0ZyYW1l",
            "T2Zmc2V0GAMgASgDEhEKCVRpbWVTdGFtcBgEIAEoAyIrCglCeXRlUmFuZ2US",
            "DgoGT2Zmc2V0GAEgASgFEg4KBkxlbmd0aBgCIAEoBSI5ChJEYXRhbGlua1Bh",
            "Y2tldFVuaXQSIwoFQnl0ZXMYASABKAsyFC5uZHgubW9kZWwuQnl0ZVJhbmdl",
            "IjgKEU5ldHdvcmtQYWNrZXRVbml0EiMKBUJ5dGVzGAEgASgLMhQubmR4Lm1v",
            "ZGVsLkJ5dGVSYW5nZSI6ChNUcmFuc3BvcnRQYWNrZXRVbml0EiMKBUJ5dGVz",
            "GAEgASgLMhQubmR4Lm1vZGVsLkJ5dGVSYW5nZSI8ChVBcHBsaWNhdGlvblBh",
            "Y2tldFVuaXQSIwoFQnl0ZXMYASABKAsyFC5uZHgubW9kZWwuQnl0ZVJhbmdl",
            "IvcBCgpQYWNrZXRVbml0Eh8KBUZyYW1lGAEgASgLMhAubmR4Lm1vZGVsLkZy",
            "YW1lEi8KCERhdGFsaW5rGAIgASgLMh0ubmR4Lm1vZGVsLkRhdGFsaW5rUGFj",
            "a2V0VW5pdBItCgdOZXR3b3JrGAMgASgLMhwubmR4Lm1vZGVsLk5ldHdvcmtQ",
            "YWNrZXRVbml0EjEKCVRyYW5zcG9ydBgEIAEoCzIeLm5keC5tb2RlbC5UcmFu",
            "c3BvcnRQYWNrZXRVbml0EjUKC0FwcGxpY2F0aW9uGAUgASgLMiAubmR4Lm1v",
            "ZGVsLkFwcGxpY2F0aW9uUGFja2V0VW5pdCJgCgtQYWNrZXRCbG9jaxIpCghM",
            "aW5rVHlwZRgBIAEoDjIXLm5keC5tb2RlbC5MaW5rVHlwZUNvZGUSJgoHUGFj",
            "a2V0cxgCIAMoCzIVLm5keC5tb2RlbC5QYWNrZXRVbml0KjEKDExpbmtUeXBl",
            "Q29kZRILCgdVbmtub3duEAASFAoQTGlua1R5cGVFdGhlcm5ldBABYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Ndx.Model.LinkTypeCode), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Ndx.Model.Frame), global::Ndx.Model.Frame.Parser, new[]{ "FrameNumber", "FrameLength", "FrameOffset", "TimeStamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ndx.Model.ByteRange), global::Ndx.Model.ByteRange.Parser, new[]{ "Offset", "Length" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ndx.Model.DatalinkPacketUnit), global::Ndx.Model.DatalinkPacketUnit.Parser, new[]{ "Bytes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ndx.Model.NetworkPacketUnit), global::Ndx.Model.NetworkPacketUnit.Parser, new[]{ "Bytes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ndx.Model.TransportPacketUnit), global::Ndx.Model.TransportPacketUnit.Parser, new[]{ "Bytes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ndx.Model.ApplicationPacketUnit), global::Ndx.Model.ApplicationPacketUnit.Parser, new[]{ "Bytes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ndx.Model.PacketUnit), global::Ndx.Model.PacketUnit.Parser, new[]{ "Frame", "Datalink", "Network", "Transport", "Application" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ndx.Model.PacketBlock), global::Ndx.Model.PacketBlock.Parser, new[]{ "LinkType", "Packets" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum LinkTypeCode {
    [pbr::OriginalName("Unknown")] Unknown = 0,
    [pbr::OriginalName("LinkTypeEthernet")] LinkTypeEthernet = 1,
  }

  #endregion

  #region Messages
  public sealed partial class Frame : pb::IMessage<Frame> {
    private static readonly pb::MessageParser<Frame> _parser = new pb::MessageParser<Frame>(() => new Frame());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Frame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ndx.Model.PacketModelReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Frame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Frame(Frame other) : this() {
      frameNumber_ = other.frameNumber_;
      frameLength_ = other.frameLength_;
      frameOffset_ = other.frameOffset_;
      timeStamp_ = other.timeStamp_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Frame Clone() {
      return new Frame(this);
    }

    /// <summary>Field number for the "FrameNumber" field.</summary>
    public const int FrameNumberFieldNumber = 1;
    private int frameNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FrameNumber {
      get { return frameNumber_; }
      set {
        frameNumber_ = value;
      }
    }

    /// <summary>Field number for the "FrameLength" field.</summary>
    public const int FrameLengthFieldNumber = 2;
    private int frameLength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FrameLength {
      get { return frameLength_; }
      set {
        frameLength_ = value;
      }
    }

    /// <summary>Field number for the "FrameOffset" field.</summary>
    public const int FrameOffsetFieldNumber = 3;
    private long frameOffset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FrameOffset {
      get { return frameOffset_; }
      set {
        frameOffset_ = value;
      }
    }

    /// <summary>Field number for the "TimeStamp" field.</summary>
    public const int TimeStampFieldNumber = 4;
    private long timeStamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TimeStamp {
      get { return timeStamp_; }
      set {
        timeStamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Frame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Frame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FrameNumber != other.FrameNumber) return false;
      if (FrameLength != other.FrameLength) return false;
      if (FrameOffset != other.FrameOffset) return false;
      if (TimeStamp != other.TimeStamp) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FrameNumber != 0) hash ^= FrameNumber.GetHashCode();
      if (FrameLength != 0) hash ^= FrameLength.GetHashCode();
      if (FrameOffset != 0L) hash ^= FrameOffset.GetHashCode();
      if (TimeStamp != 0L) hash ^= TimeStamp.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FrameNumber != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FrameNumber);
      }
      if (FrameLength != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FrameLength);
      }
      if (FrameOffset != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(FrameOffset);
      }
      if (TimeStamp != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TimeStamp);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FrameNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FrameNumber);
      }
      if (FrameLength != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FrameLength);
      }
      if (FrameOffset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FrameOffset);
      }
      if (TimeStamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimeStamp);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Frame other) {
      if (other == null) {
        return;
      }
      if (other.FrameNumber != 0) {
        FrameNumber = other.FrameNumber;
      }
      if (other.FrameLength != 0) {
        FrameLength = other.FrameLength;
      }
      if (other.FrameOffset != 0L) {
        FrameOffset = other.FrameOffset;
      }
      if (other.TimeStamp != 0L) {
        TimeStamp = other.TimeStamp;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            FrameNumber = input.ReadInt32();
            break;
          }
          case 16: {
            FrameLength = input.ReadInt32();
            break;
          }
          case 24: {
            FrameOffset = input.ReadInt64();
            break;
          }
          case 32: {
            TimeStamp = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ByteRange : pb::IMessage<ByteRange> {
    private static readonly pb::MessageParser<ByteRange> _parser = new pb::MessageParser<ByteRange>(() => new ByteRange());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ByteRange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ndx.Model.PacketModelReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ByteRange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ByteRange(ByteRange other) : this() {
      offset_ = other.offset_;
      length_ = other.length_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ByteRange Clone() {
      return new ByteRange(this);
    }

    /// <summary>Field number for the "Offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "Length" field.</summary>
    public const int LengthFieldNumber = 2;
    private int length_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ByteRange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ByteRange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Length != other.Length) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Length != 0) hash ^= Length.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Offset != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Offset);
      }
      if (Length != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Length);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Length);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ByteRange other) {
      if (other == null) {
        return;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Length != 0) {
        Length = other.Length;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Offset = input.ReadInt32();
            break;
          }
          case 16: {
            Length = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatalinkPacketUnit : pb::IMessage<DatalinkPacketUnit> {
    private static readonly pb::MessageParser<DatalinkPacketUnit> _parser = new pb::MessageParser<DatalinkPacketUnit>(() => new DatalinkPacketUnit());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatalinkPacketUnit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ndx.Model.PacketModelReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatalinkPacketUnit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatalinkPacketUnit(DatalinkPacketUnit other) : this() {
      Bytes = other.bytes_ != null ? other.Bytes.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatalinkPacketUnit Clone() {
      return new DatalinkPacketUnit(this);
    }

    /// <summary>Field number for the "Bytes" field.</summary>
    public const int BytesFieldNumber = 1;
    private global::Ndx.Model.ByteRange bytes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ndx.Model.ByteRange Bytes {
      get { return bytes_; }
      set {
        bytes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatalinkPacketUnit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatalinkPacketUnit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Bytes, other.Bytes)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (bytes_ != null) hash ^= Bytes.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (bytes_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Bytes);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (bytes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bytes);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatalinkPacketUnit other) {
      if (other == null) {
        return;
      }
      if (other.bytes_ != null) {
        if (bytes_ == null) {
          bytes_ = new global::Ndx.Model.ByteRange();
        }
        Bytes.MergeFrom(other.Bytes);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (bytes_ == null) {
              bytes_ = new global::Ndx.Model.ByteRange();
            }
            input.ReadMessage(bytes_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NetworkPacketUnit : pb::IMessage<NetworkPacketUnit> {
    private static readonly pb::MessageParser<NetworkPacketUnit> _parser = new pb::MessageParser<NetworkPacketUnit>(() => new NetworkPacketUnit());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetworkPacketUnit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ndx.Model.PacketModelReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkPacketUnit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkPacketUnit(NetworkPacketUnit other) : this() {
      Bytes = other.bytes_ != null ? other.Bytes.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkPacketUnit Clone() {
      return new NetworkPacketUnit(this);
    }

    /// <summary>Field number for the "Bytes" field.</summary>
    public const int BytesFieldNumber = 1;
    private global::Ndx.Model.ByteRange bytes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ndx.Model.ByteRange Bytes {
      get { return bytes_; }
      set {
        bytes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetworkPacketUnit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetworkPacketUnit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Bytes, other.Bytes)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (bytes_ != null) hash ^= Bytes.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (bytes_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Bytes);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (bytes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bytes);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetworkPacketUnit other) {
      if (other == null) {
        return;
      }
      if (other.bytes_ != null) {
        if (bytes_ == null) {
          bytes_ = new global::Ndx.Model.ByteRange();
        }
        Bytes.MergeFrom(other.Bytes);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (bytes_ == null) {
              bytes_ = new global::Ndx.Model.ByteRange();
            }
            input.ReadMessage(bytes_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransportPacketUnit : pb::IMessage<TransportPacketUnit> {
    private static readonly pb::MessageParser<TransportPacketUnit> _parser = new pb::MessageParser<TransportPacketUnit>(() => new TransportPacketUnit());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransportPacketUnit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ndx.Model.PacketModelReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransportPacketUnit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransportPacketUnit(TransportPacketUnit other) : this() {
      Bytes = other.bytes_ != null ? other.Bytes.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransportPacketUnit Clone() {
      return new TransportPacketUnit(this);
    }

    /// <summary>Field number for the "Bytes" field.</summary>
    public const int BytesFieldNumber = 1;
    private global::Ndx.Model.ByteRange bytes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ndx.Model.ByteRange Bytes {
      get { return bytes_; }
      set {
        bytes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransportPacketUnit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransportPacketUnit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Bytes, other.Bytes)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (bytes_ != null) hash ^= Bytes.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (bytes_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Bytes);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (bytes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bytes);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransportPacketUnit other) {
      if (other == null) {
        return;
      }
      if (other.bytes_ != null) {
        if (bytes_ == null) {
          bytes_ = new global::Ndx.Model.ByteRange();
        }
        Bytes.MergeFrom(other.Bytes);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (bytes_ == null) {
              bytes_ = new global::Ndx.Model.ByteRange();
            }
            input.ReadMessage(bytes_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ApplicationPacketUnit : pb::IMessage<ApplicationPacketUnit> {
    private static readonly pb::MessageParser<ApplicationPacketUnit> _parser = new pb::MessageParser<ApplicationPacketUnit>(() => new ApplicationPacketUnit());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApplicationPacketUnit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ndx.Model.PacketModelReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplicationPacketUnit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplicationPacketUnit(ApplicationPacketUnit other) : this() {
      Bytes = other.bytes_ != null ? other.Bytes.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplicationPacketUnit Clone() {
      return new ApplicationPacketUnit(this);
    }

    /// <summary>Field number for the "Bytes" field.</summary>
    public const int BytesFieldNumber = 1;
    private global::Ndx.Model.ByteRange bytes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ndx.Model.ByteRange Bytes {
      get { return bytes_; }
      set {
        bytes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApplicationPacketUnit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApplicationPacketUnit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Bytes, other.Bytes)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (bytes_ != null) hash ^= Bytes.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (bytes_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Bytes);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (bytes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bytes);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApplicationPacketUnit other) {
      if (other == null) {
        return;
      }
      if (other.bytes_ != null) {
        if (bytes_ == null) {
          bytes_ = new global::Ndx.Model.ByteRange();
        }
        Bytes.MergeFrom(other.Bytes);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (bytes_ == null) {
              bytes_ = new global::Ndx.Model.ByteRange();
            }
            input.ReadMessage(bytes_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PacketUnit : pb::IMessage<PacketUnit> {
    private static readonly pb::MessageParser<PacketUnit> _parser = new pb::MessageParser<PacketUnit>(() => new PacketUnit());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PacketUnit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ndx.Model.PacketModelReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PacketUnit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PacketUnit(PacketUnit other) : this() {
      Frame = other.frame_ != null ? other.Frame.Clone() : null;
      Datalink = other.datalink_ != null ? other.Datalink.Clone() : null;
      Network = other.network_ != null ? other.Network.Clone() : null;
      Transport = other.transport_ != null ? other.Transport.Clone() : null;
      Application = other.application_ != null ? other.Application.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PacketUnit Clone() {
      return new PacketUnit(this);
    }

    /// <summary>Field number for the "Frame" field.</summary>
    public const int FrameFieldNumber = 1;
    private global::Ndx.Model.Frame frame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ndx.Model.Frame Frame {
      get { return frame_; }
      set {
        frame_ = value;
      }
    }

    /// <summary>Field number for the "Datalink" field.</summary>
    public const int DatalinkFieldNumber = 2;
    private global::Ndx.Model.DatalinkPacketUnit datalink_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ndx.Model.DatalinkPacketUnit Datalink {
      get { return datalink_; }
      set {
        datalink_ = value;
      }
    }

    /// <summary>Field number for the "Network" field.</summary>
    public const int NetworkFieldNumber = 3;
    private global::Ndx.Model.NetworkPacketUnit network_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ndx.Model.NetworkPacketUnit Network {
      get { return network_; }
      set {
        network_ = value;
      }
    }

    /// <summary>Field number for the "Transport" field.</summary>
    public const int TransportFieldNumber = 4;
    private global::Ndx.Model.TransportPacketUnit transport_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ndx.Model.TransportPacketUnit Transport {
      get { return transport_; }
      set {
        transport_ = value;
      }
    }

    /// <summary>Field number for the "Application" field.</summary>
    public const int ApplicationFieldNumber = 5;
    private global::Ndx.Model.ApplicationPacketUnit application_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ndx.Model.ApplicationPacketUnit Application {
      get { return application_; }
      set {
        application_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PacketUnit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PacketUnit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Frame, other.Frame)) return false;
      if (!object.Equals(Datalink, other.Datalink)) return false;
      if (!object.Equals(Network, other.Network)) return false;
      if (!object.Equals(Transport, other.Transport)) return false;
      if (!object.Equals(Application, other.Application)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (frame_ != null) hash ^= Frame.GetHashCode();
      if (datalink_ != null) hash ^= Datalink.GetHashCode();
      if (network_ != null) hash ^= Network.GetHashCode();
      if (transport_ != null) hash ^= Transport.GetHashCode();
      if (application_ != null) hash ^= Application.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (frame_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Frame);
      }
      if (datalink_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Datalink);
      }
      if (network_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Network);
      }
      if (transport_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Transport);
      }
      if (application_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Application);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (frame_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Frame);
      }
      if (datalink_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Datalink);
      }
      if (network_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Network);
      }
      if (transport_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transport);
      }
      if (application_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Application);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PacketUnit other) {
      if (other == null) {
        return;
      }
      if (other.frame_ != null) {
        if (frame_ == null) {
          frame_ = new global::Ndx.Model.Frame();
        }
        Frame.MergeFrom(other.Frame);
      }
      if (other.datalink_ != null) {
        if (datalink_ == null) {
          datalink_ = new global::Ndx.Model.DatalinkPacketUnit();
        }
        Datalink.MergeFrom(other.Datalink);
      }
      if (other.network_ != null) {
        if (network_ == null) {
          network_ = new global::Ndx.Model.NetworkPacketUnit();
        }
        Network.MergeFrom(other.Network);
      }
      if (other.transport_ != null) {
        if (transport_ == null) {
          transport_ = new global::Ndx.Model.TransportPacketUnit();
        }
        Transport.MergeFrom(other.Transport);
      }
      if (other.application_ != null) {
        if (application_ == null) {
          application_ = new global::Ndx.Model.ApplicationPacketUnit();
        }
        Application.MergeFrom(other.Application);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (frame_ == null) {
              frame_ = new global::Ndx.Model.Frame();
            }
            input.ReadMessage(frame_);
            break;
          }
          case 18: {
            if (datalink_ == null) {
              datalink_ = new global::Ndx.Model.DatalinkPacketUnit();
            }
            input.ReadMessage(datalink_);
            break;
          }
          case 26: {
            if (network_ == null) {
              network_ = new global::Ndx.Model.NetworkPacketUnit();
            }
            input.ReadMessage(network_);
            break;
          }
          case 34: {
            if (transport_ == null) {
              transport_ = new global::Ndx.Model.TransportPacketUnit();
            }
            input.ReadMessage(transport_);
            break;
          }
          case 42: {
            if (application_ == null) {
              application_ = new global::Ndx.Model.ApplicationPacketUnit();
            }
            input.ReadMessage(application_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PacketBlock : pb::IMessage<PacketBlock> {
    private static readonly pb::MessageParser<PacketBlock> _parser = new pb::MessageParser<PacketBlock>(() => new PacketBlock());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PacketBlock> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ndx.Model.PacketModelReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PacketBlock() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PacketBlock(PacketBlock other) : this() {
      linkType_ = other.linkType_;
      packets_ = other.packets_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PacketBlock Clone() {
      return new PacketBlock(this);
    }

    /// <summary>Field number for the "LinkType" field.</summary>
    public const int LinkTypeFieldNumber = 1;
    private global::Ndx.Model.LinkTypeCode linkType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ndx.Model.LinkTypeCode LinkType {
      get { return linkType_; }
      set {
        linkType_ = value;
      }
    }

    /// <summary>Field number for the "Packets" field.</summary>
    public const int PacketsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Ndx.Model.PacketUnit> _repeated_packets_codec
        = pb::FieldCodec.ForMessage(18, global::Ndx.Model.PacketUnit.Parser);
    private readonly pbc::RepeatedField<global::Ndx.Model.PacketUnit> packets_ = new pbc::RepeatedField<global::Ndx.Model.PacketUnit>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ndx.Model.PacketUnit> Packets {
      get { return packets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PacketBlock);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PacketBlock other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LinkType != other.LinkType) return false;
      if(!packets_.Equals(other.packets_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LinkType != 0) hash ^= LinkType.GetHashCode();
      hash ^= packets_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LinkType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) LinkType);
      }
      packets_.WriteTo(output, _repeated_packets_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LinkType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LinkType);
      }
      size += packets_.CalculateSize(_repeated_packets_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PacketBlock other) {
      if (other == null) {
        return;
      }
      if (other.LinkType != 0) {
        LinkType = other.LinkType;
      }
      packets_.Add(other.packets_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            linkType_ = (global::Ndx.Model.LinkTypeCode) input.ReadEnum();
            break;
          }
          case 18: {
            packets_.AddEntriesFrom(input, _repeated_packets_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
